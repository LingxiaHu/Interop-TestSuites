<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns1:ReqTable xmlns:ns1="http://schemas.microsoft.com/windows/ProtocolsTest/2007/07/RequirementTable">
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R1</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1</ns1:Doc_Sect>
		<ns1:Description>[In Transport] The commands specified by this protocol [MS-OXCNOTIF] are sent to and received from the server by using the underlying ROP request buffers and ROP response buffers, respectively, as specified in [MS-OXCROPS].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R2</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1</ns1:Doc_Sect>
		<ns1:Description>[In Transport] Asynchronous calls are made on the server by using RPC transport, as specified in [MS-OXCRPC].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R474</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1</ns1:Doc_Sect>
		<ns1:Description>[In Transport] Asynchronous calls are made on the server by using the MAPI extensions to HTTP&lt;1&gt;, as specified in [MS-OXCMAPIHTTP].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R475.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R3</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1</ns1:Doc_Sect>
		<ns1:Description>[In Transport] UDP datagrams are sent from server to client by using the User Datagram Protocol (UDP), as specified in [RFC768].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R4</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1</ns1:Doc_Sect>
		<ns1:Description>[In Transport] For more information [About UDP], see [MSDN-WS2].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R5</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1</ns1:Doc_Sect>
		<ns1:Description>[In Notifications] This section specifies the following: the server events  [NewMail, ObjectCopied, ObjectCreated, ObjectDeleted, ObjectModified, ObjectMoved, SearchComplete and TableModified] that the client can be notified of.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCNOTIF_R11, MS-OXCNOTIF_R12, MS-OXCNOTIF_R13, MS-OXCNOTIF_R14, MS-OXCNOTIF_R15, MS-OXCNOTIF_R16, MS-OXCNOTIF_R17, MS-OXCNOTIF_R18.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R6</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1</ns1:Doc_Sect>
		<ns1:Description>[In Notifications] [This section specifies the following] The RopRegisterNotification ROP, which is used to subscribe to notifications.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCNOTIF_R288.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R7</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1</ns1:Doc_Sect>
		<ns1:Description>[In Notifications] [This section specifies the following] [operations] The ROPs and RPCs used to notify the client of pending notifications: the EcDoAsyncConnectEx method; the EcDoAsyncWaitEx method; the EcRRegisterPushNotification method; the RopPending ROP ([MS-OXCROPS] section 2.2.14.3).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCNOTIF_R62, MS-OXCNOTIF_R68, MS-OXCNOTIF_R79, MS-OXCNOTIF_R81.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R481</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1</ns1:Doc_Sect>
		<ns1:Description>[In Notifications] [This section specifies the following] [operations] The ROPs and RPCs used to notify the client of pending notifications: The NotificationWait request type&lt;2&gt; ([MS-OXCMAPIHTTP] section 2.2.4.4).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R482.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R8</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1</ns1:Doc_Sect>
		<ns1:Description>[In Notifications] [This section specifies the following] The RopNotify ROP (section 2.2.1.4.1), which is used to send notification details.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCNOTIF_R240.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R9</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Server Event Types] The following table specifies the events [NewMail, ObjectCopied, ObjectCreated, ObjectDeleted, ObjectModified, ObjectMoved, SearchComplete, TableModified] that happen on the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R10</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Server Event Types] Clients can register to receive notifications about these events [NewMail, ObjectCopied, ObjectCreated, ObjectDeleted, ObjectModified, ObjectMoved, SearchComplete, TableModified] by using the RopRegisterNotification ROP (section 2.2.1.2.1).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCNOTIF_R11, MS-OXCNOTIF_R12, MS-OXCNOTIF_R13, MS-OXCNOTIF_R14, MS-OXCNOTIF_R15, MS-OXCNOTIF_R16, MS-OXCNOTIF_R17, MS-OXCNOTIF_R18.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R11</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Server Event Types] NewMail: A new email message has been received by the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R12</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Server Event Types] ObjectCopied: An existing object has been copied on the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R13</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Server Event Types] ObjectCreated: A new object has been created on the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R14</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Server Event Types] ObjectDeleted: An existing object has been deleted from the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R15</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Server Event Types] ObjectModified: An existing object has been modified on the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R16</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Server Event Types] ObjectMoved: An existing object has been moved to another location on the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R17</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Server Event Types] SearchCompleted: A search operation has been completed on the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R18</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Server Event Types] TableModified: A table has been modified on the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R19</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Server Event Types] TableModified event types are specified in section 2.2.1.1.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R20</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1.1</ns1:Doc_Sect>
		<ns1:Description>[In TableModified Event Types] The following table specifies the table modification event types [TableChanged, TableRowAdded, TableRowDeleted, TableRowModified, TableRestrictionChanged].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R21</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1.1</ns1:Doc_Sect>
		<ns1:Description>[In TableModified Event Types] Clients can register to receive notifications about these events [TableChanged, TableRowAdded, TableRowDeleted, TableRowModified, TableRestrictionChanged] by using the RopRegisterNotification ROP (section 2.2.1.2.1).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCNOTIF_R22, MS-OXCNOTIF_R23, MS-OXCNOTIF_R24, MS-OXCNOTIF_R25, MS-OXCNOTIF_R26, MS-OXCNOTIF_R27, MS-OXCNOTIF_R28.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R22</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1.1</ns1:Doc_Sect>
		<ns1:Description>[In TableModified Event Types] TableChanged: A table has been changed.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R23</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1.1</ns1:Doc_Sect>
		<ns1:Description>[In TableModified Event Types] TableRowAdded: A new row has been added to the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R24</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1.1</ns1:Doc_Sect>
		<ns1:Description>[In TableModified Event Types] TableRowDeleted: An existing row has been deleted from the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R25</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1.1</ns1:Doc_Sect>
		<ns1:Description>[In TableModified Event Types] TableRowModified: An existing row has been modified in the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R26</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1.1</ns1:Doc_Sect>
		<ns1:Description>[In TableModified Event Types] TableRestrictionChanged: A table restriction has been cleared.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R27</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1.1</ns1:Doc_Sect>
		<ns1:Description>[In TableModified Event Types] TableRestrictionChanged: A table restriction has been removed.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R28</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1.1</ns1:Doc_Sect>
		<ns1:Description>[In TableModified Event Types] TableRestrictionChanged: A table restriction is pending.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R28001</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1.1</ns1:Doc_Sect>
		<ns1:Description>[In TableModified Event Types] For more details about how a table restriction is cleared or removed, see [MS-OXCTABL] section 3.2.5.16. </ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R29</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1.1</ns1:Doc_Sect>
		<ns1:Description>[In TableModified Event Types] For more details about how this event type is related to the TBLSTAT_RESTRICTING value of the TableStatus field, as specified in [MS-OXCTABL] section 2.2.2.1.3, of the RopRestrict ROP ([MS-OXCROPS] section 2.2.5.3), see [MS-OXCTABL] section 3.2.5.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCTABL_R418, MS-OXCTABL_R819.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R30</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1.1</ns1:Doc_Sect>
		<ns1:Description>[In TableModified Event Types] For server steps related to creating and sending TableModified event notifications, see section 3.1.4.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R31</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1.1</ns1:Doc_Sect>
		<ns1:Description>[In TableModified Event Types] For client initialization steps related to subscribing to TableModified event notifications, see section 3.2.4.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R32</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscription Management] Subscription management is handled by the RopRegisterNotification ROP (section 2.2.1.2.1).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCNOTIF_R288.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R33</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscription Management] For more information about how clients subscribe to notification events, see section 3.2.4.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R34</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP] The RopRegisterNotification ROP ([MS-OXCROPS] section 2.2.14.1) creates a subscription for specified notifications on the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCNOTIF_R288.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R35</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP] The RopRegisterNotification ROP ([MS-OXCROPS] section 2.2.14.1) returns a handle of the subscription to the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R36</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP] The complete syntax of the ROP request and response buffers for this ROP is specified in [MS-OXCROPS].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCNOTIF_R1.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R37</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP] This section specifies the syntax and semantics of various fields that are not fully specified in [MS-OXCROPS].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R38</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] The following descriptions define valid fields for the request buffer of the RopRegisterNotification ROP ([MS-OXCROPS] section 2.2.14.1).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R39</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] NotificationTypes: A set of bits describing notifications that the client is interested in receiving.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCNOTIF_R41, MS-OXCNOTIF_R42, MS-OXCNOTIF_R43, MS-OXCNOTIF_R44, MS-OXCNOTIF_R45, MS-OXCNOTIF_R46, MS-OXCNOTIF_R47,  MS-OXCNOTIF_R40001.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R133</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] It [NotificationTypes] is 2 byte.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R40</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] The following table lists the values 0x0002,  0x0004, 0x0008, 0x0010, 0x0020, 0x0040, 0x0080, 0x0100, 0x0400] that are available for notification types.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCNOTIF_R41, MS-OXCNOTIF_R42, MS-OXCNOTIF_R43, MS-OXCNOTIF_R44, MS-OXCNOTIF_R45, MS-OXCNOTIF_R46, MS-OXCNOTIF_R47,  MS-OXCNOTIF_R40001.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R41</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] [NotificationTypes value] 0x0002: The server sends notifications to the client when NewMail events occur within the scope of interest.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R42</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] [NotificationTypes value] 0x0004: The server sends notifications to the client when ObjectCreated events occur within the scope of interest.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R43</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] [NotificationTypes value] 0x0008: The server sends notifications to the client when ObjectDeleted events occur within the scope of interest.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R44</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] [NotificationTypes value] 0x0010: The server sends notifications to the client when ObjectModified events occur within the scope of interest.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R45</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] [NotificationTypes value] 0x0020: The server sends notifications to the client when ObjectMoved events occur within the scope of interest.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R46</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] [NotificationTypes value] 0x0040: The server sends notifications to the client when ObjectCopied events occur within the scope of interest.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R47</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] [NotificationTypes value] 0x0080: The server sends notifications to the client when SearchCompleted events occur within the scope of interest.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R40001</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] [NotificationTypes value] 0x0100: The server sends notifications to the client when TableModified events occur within the scope of interest.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R40002</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] [NotificationTypes value] 0x0400: The server sends notifications to the client when the Extended flag is set.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R48</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] For details about server events, see section 2.2.1.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R49</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] Reserved: This field is reserved.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R134</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] It [Reserved] is 1 byte.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R50</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] The field [Reserved] value MUST be 0x00.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R51</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] The server behavior is undefined if the value [Reserved] is not 0x00.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R49001</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] This field [Reserved] is optional [and is present only if the Extended (0x0400) flag is set in the NotificationTypes field.]</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R49002</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] This field [Reserved] [is optional and] is present only if the Extended (0x0400) flag is set in the NotificationTypes field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R52</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] WantWholeStore: A value of TRUE (0x01) if the scope for notifications is the entire mailbox.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R135</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] It [WantWholeStore] is 1 byte.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R53</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopRegisterNotification ROP Request Buffer] otherwise [if the scope for notifications is not the entire mailbox], [the value of WantWholeStore is] FALSE (0x00).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R54</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Pending Notifications] Pending notifications rely on transmission of one or more of the following methods [EcDoAsyncConnectEx, EcDoAsyncWaitEx, EcRRegisterPushNotification, RopPending ([MS-OXCROPS] section 2.2.14.3), NotificationWait request type].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCNOTIF_R62, MS-OXCNOTIF_R68, MS-OXCNOTIF_R79, MS-OXCNOTIF_R81, MS-OXCNOTIF_R482.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R55</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Pending Notifications] [Pending notifications rely on transmission of one or more of the following methods] The EcDoAsyncConnectEx method, which is used in asynchronous RPC notifications.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCNOTIF_R62.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R56</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Pending Notifications] [Pending notifications rely on transmission of one or more of the following methods] The EcDoAsyncWaitEx method, which is also used in asynchronous RPC notifications.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCNOTIF_R68.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R57</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Pending Notifications] [Pending notifications rely on transmission of one or more of the following methods] The EcRRegisterPushNotification method, which is used for push notifications.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCNOTIF_R79.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R459</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Pending Notifications] [Pending notifications rely on transmission of one or more of the following methods] The EcDoRpcExt2 method and the RopPending ROP ([MS-OXCROPS] section 2.2.14.3).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCNOTIF_R81.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R54001</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Pending Notifications] [Pending notifications rely on transmission of one or more of the following methods] The NotificationWait request type as described in [MS-OXCMAPIHTTP] section 2.2.4.4.&lt;3&gt;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R482.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R58</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3.1</ns1:Doc_Sect>
		<ns1:Description>[In EcDoAsyncConnectEx Method] The EcDoAsyncConnectEx&lt;4&gt; RPC method, as specified in [MS-OXCRPC] section 3.1.4.4, is used to acquire an asynchronous context handle on the server to use in subsequent EcDoAsyncWaitEx method calls, as specified in [MS-OXCRPC] section 3.3.4.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R62.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R63</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3.1</ns1:Doc_Sect>
		<ns1:Description>[In EcDoAsyncConnectEx Method] The EcDoAsyncConnectEx method is used to support asynchronous RPC notifications.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R64</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3.1</ns1:Doc_Sect>
		<ns1:Description>[In EcDoAsyncConnectEx Method] For more information about how the client sends EcDoAsyncConnectEx method to initialize the notification process, see section 3.2.5.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R65</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3.1</ns1:Doc_Sect>
		<ns1:Description>[In EcDoAsyncConnectEx Method] For more information about how the server receives the EcDoAsyncConnectEx method, see section 3.1.5.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R66</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3.2</ns1:Doc_Sect>
		<ns1:Description>[In EcDoAsyncWaitEx Method] The EcDoAsyncWaitEx&lt;5&gt; asynchronous RPC method, as specified in [MS-OXCRPC] section 3.3.4.1, is used to inform a client about pending notifications on the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R68.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R69</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3.2</ns1:Doc_Sect>
		<ns1:Description>[In EcDoAsyncWaitEx Method] The EcDoAsyncWaitEx method is used to support asynchronous RPC notifications.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R70</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3.2</ns1:Doc_Sect>
		<ns1:Description>[In EcDoAsyncWaitEx Method] For more information about how the client sends and receives EcDoAsyncWaitEx method calls, see section 3.2.5.5.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R71</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3.2</ns1:Doc_Sect>
		<ns1:Description>[In EcDoAsyncWaitEx Method] For more information about how the server receives and completes EcDoAsyncWaitEx method calls, see section 3.1.5.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R72</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3.3</ns1:Doc_Sect>
		<ns1:Description>[In EcRRegisterPushNotification Method] The EcRRegisterPushNotification&lt;6&gt; RPC method, as specified in [MS-OXCRPC] section 3.1.4.5, is used to register a callback address of a client on the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R73.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R78</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3.3</ns1:Doc_Sect>
		<ns1:Description>[In EcRRegisterPushNotification Method] The callback address is required in order to receive UDP datagrams from the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R79</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3.3</ns1:Doc_Sect>
		<ns1:Description>[In EcRRegisterPushNotification Method] It [callback address] is used to support push notifications, which is one way in which the server can notify clients of pending notifications.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R80</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3.3</ns1:Doc_Sect>
		<ns1:Description>[In EcRRegisterPushNotification Method] The UDP datagrams inform the client that notifications are pending on the server for the session.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R81</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3.4</ns1:Doc_Sect>
		<ns1:Description>[In EcDoRpcExt] The RopPending ROP ([MS-OXCROPS] section 2.2.14.3) notifies the client that there are pending notifications on the server for the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirements: MS-OXCNOTIF_R81001, MS-OXCNOTIF_R81002.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R82</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3.4</ns1:Doc_Sect>
		<ns1:Description>[In EcDoRpcExt] This ROP [RopPending] MUST appear only in response buffers of either the EcDoRpcExt2 method, as specified in [MS-OXCRPC] section 3.1.4.2, [or the Execute request type,&lt;7&gt; as specified in [MS-OXCMAPIHTTP] section 2.2.4.2.2. ]</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXCNOTIF_R83.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R83</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3.4</ns1:Doc_Sect>
		<ns1:Description>[In EcDoRpcExt] This ROP [RopPending] MUST appear in response buffers of the EcDoRpcExt2 method, as specified in [MS-OXCRPC] section 3.1.4.2.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R82:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R8201</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3.4</ns1:Doc_Sect>
		<ns1:Description>[In EcDoRpcExt] This ROP [RopPending] MUST appear only in response buffers of [either the EcDoRpcExt2 method, as specified in [MS-OXCRPC] section 3.1.4.2, or ] the Execute request type,&lt;7&gt; as specified in [MS-OXCMAPIHTTP] section 2.2.4.2.2. </ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R8201001</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R84</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3.4</ns1:Doc_Sect>
		<ns1:Description>[In EcDoRpcExt] For more information about how the server sends this ROP response, see section 3.1.5.6.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R85</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3.4</ns1:Doc_Sect>
		<ns1:Description>[In EcDoRpcExt] For more information about how the client receives this ROP response, see section 3.2.5.5.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R86</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Notification Details] Notification details are transmitted by using the RopNotify ROP (section 2.2.1.4.1).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCNOTIF_R240.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R87</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1</ns1:Doc_Sect>
		<ns1:Description>[In RopNotify ROP] The RopNotify ROP ([MS-OXCROPS] section 2.2.14.2) provides the client with the details of notifications that are sent by server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCNOTIF_R240.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R88</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1</ns1:Doc_Sect>
		<ns1:Description>[In RopNotify ROP] This ROP [RopNotify] MUST appear only in response buffers of the EcDoRpcExt2 method, as specified in [MS-OXCRPC] section 3.1.4.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXCNOTIF_R89.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R89</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1</ns1:Doc_Sect>
		<ns1:Description>[In RopNotify ROP] This ROP [RopNotify] MUST appear in response buffers of the EcDoRpcExt2 method, as specified in [MS-OXCRPC] section 3.1.4.2.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R88:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R496</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1</ns1:Doc_Sect>
		<ns1:Description>[In RopNotify ROP] This ROP [RopNotify] MUST appear only in the Execute request type success response body&lt;8&gt;, as specified in [MS-OXCMAPIHTTP] section 2.2.4.2.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R498.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R90</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1</ns1:Doc_Sect>
		<ns1:Description>[In RopNotify ROP] The complete syntax of the ROP response buffer for this ROP [RopNotify] is specified in [MS-OXCROPS].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCNOTIF_R1.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R91</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1</ns1:Doc_Sect>
		<ns1:Description>[In RopNotify ROP] This section specifies the syntax and semantics of various fields that are not fully specified in [MS-OXCROPS].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R92</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1</ns1:Doc_Sect>
		<ns1:Description>[In RopNotify ROP] For more information about how the server sends notification details using the RopNotify ROP, see section 3.1.5.7.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R93</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1</ns1:Doc_Sect>
		<ns1:Description>[In RopNotify ROP] For more information about how the client receives notification details using the RopNotify ROP, see section 3.2.5.7.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R94</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopNotify ROP Response Buffer] The following descriptions define valid fields for the response buffer of the RopNotify ROP ([MS-OXCROPS] section 2.2.14.2).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R95</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopNotify ROP Response Buffer] NotificationHandle: The 32-bit server object handle of the target object for the notification.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCNOTIF_R96, MS-OXCNOTIF_R97.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R136</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopNotify ROP Response Buffer] It [NotificationHandle] is 4 bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R96</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopNotify ROP Response Buffer] [NotificationHandle] The target object can be a notification subscription.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R97</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopNotify ROP Response Buffer] [NotificationHandle] The target object can be a table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R97001</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopNotify ROP Response Buffer] [LogonId] An unsigned integer that specifies the logon associated with the notification event.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R97002</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopNotify ROP Response Buffer] [LogonId ] is 1 byte.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R97003</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In RopNotify ROP Response Buffer] NotificationData (variable): This field contains a NotificationData structure, as specified in section 2.2.1.4.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R97004</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] The NotificationData structure specifies details about the notification. </ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R98</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] The contents of this structure are as follows.
[NotificationFlags,TableEventType,TableRowFolderID,TableRowMessageID,TableRowInstance,InsertAfterTableRowFolderID,InsertAfterTableRowID,InsertAfterTableRowInstance,TableRowDataSize,FolderId,MessageId,ParentFolderId,OldFolderId,OldMessageId,OldParentFolderId,TagCount,TotalMessageCount,UnreadMessageCount,MessageFlags,UnicodeFlag].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCNOTIF_R137, MS-OXCNOTIF_R139, MS-OXCNOTIF_R140, MS-OXCNOTIF_R144, MS-OXCNOTIF_R148, MS-OXCNOTIF_R152, MS-OXCNOTIF_R156, MS-OXCNOTIF_R160, MS-OXCNOTIF_R162, MS-OXCNOTIF_R166, MS-OXCNOTIF_R169, MS-OXCNOTIF_R173,  MS-OXCNOTIF_R177, MS-OXCNOTIF_R181, MS-OXCNOTIF_R185, MS-OXCNOTIF_R189, MS-OXCNOTIF_R193, MS-OXCNOTIF_R202, MS-OXCNOTIF_R205, MS-OXCNOTIF_R209, MS-OXCNOTIF_R213, MS-OXCNOTIF_R217, MS-OXCNOTIF_R223.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R99</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] NotificationFlags: A combination of an enumeration and flags that describe the type of the notification and the availability of the notification data fields.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCNOTIF_R103, MS-OXCNOTIF_R104, MS-OXCNOTIF_R105, MS-OXCNOTIF_R106, MS-OXCNOTIF_R107, MS-OXCNOTIF_R108, MS-OXCNOTIF_R109, MS-OXCNOTIF_R110, MS-OXCNOTIF_R112, MS-OXCNOTIF_R115, MS-OXCNOTIF_R118,  MS-OXCNOTIF_R121.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R137</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [NotificationFlags] is 2 bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R101</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] The least significant 12 bits of the NotificationFlags field contain the NotificationType enumeration, which defines the type of the notification. </ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCNOTIF_R103, MS-OXCNOTIF_R104, MS-OXCNOTIF_R105, MS-OXCNOTIF_R106, MS-OXCNOTIF_R107, MS-OXCNOTIF_R108, MS-OXCNOTIF_R109, MS-OXCNOTIF_R110.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R138</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [NotificationType] is 12 bits.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R102</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] The possible values for this enumeration [NotificationType] are listed in the following table. [0x0002,0x0004,0x0008,0x0010,0x0020,0x0040,0x0080,0x0100,0x0400]</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCNOTIF_R103, MS-OXCNOTIF_R104, MS-OXCNOTIF_R105, MS-OXCNOTIF_R106, MS-OXCNOTIF_R107, MS-OXCNOTIF_R108, MS-OXCNOTIF_R109, MS-OXCNOTIF_R110.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R103</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [NotificationType value] 0x0002: The notification is for a NewMail event.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R104</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [NotificationType value] 0x0004: The notification is for an ObjectCreated event.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R105</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [NotificationType value] 0x0008: The notification is for an ObjectDeleted event.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R106</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [NotificationType value] 0x0010: The notification is for an ObjectModified event.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R107</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [NotificationType value] 0x0020: The notification is for an ObjectMoved event.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R108</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [NotificationType value] 0x0040: The notification is for an ObjectCopied event.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R109</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [NotificationType value] 0x0080: The notification is for a SearchCompleted event.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R110</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [NotificationType value] 0x0100: The notification is for a TableModified event.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R111</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [NotificationType value] 0x0400: This value is reserved.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R111001</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [NotificationType value] 0x0400: It is not used by the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R111002</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [NotificationType value] 0x0400: [It is not used by the server and] MUST be ignored by the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R111003</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] The most significant four bits of the NotificationFlags field are flags that specify the availability of the notification data fields.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R112</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] 0x1000: specify flag T.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R113</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [0x1000] The notification contains information about a change in the total number of messages in a folder triggering the event.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R114</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] If this bit [0x1000] is set, the NotificationType MUST be 0x0010.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R115</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] 0x2000: specify flag U.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R116</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [0x2000] The notification contains information about a change in the number of unread messages in a folder triggering the event.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R117</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] If this bit [0x2000] is set, the NotificationType MUST be 0x0010.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R118</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] 0x4000: specify flag S.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R119</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [0x4000] The notification is caused by an event in a search folder.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCNOTIF_R17903, MS-OXCNOTIF_R17904.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R120</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] If this bit [0x4000] is set, bit 0x8000 MUST be set.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R121</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] 0x8000: specify flag M.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R122</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [0x8000] The notification is caused by an event on a message.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCNOTIF_R14601, MS-OXCNOTIF_R14602, MS-OXCNOTIF_R14603, MS-OXCNOTIF_R15001, MS-OXCNOTIF_R15002, MS-OXCNOTIF_R15003.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R123</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] TableEventType: A subtype of the notification for a TableModified event.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCNOTIF_R128, MS-OXCNOTIF_R129, MS-OXCNOTIF_R130, MS-OXCNOTIF_R131, MS-OXCNOTIF_R132.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R139</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [TableEventType] is 2 bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R124</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableEventType] is available only if the NotificationType value in the NotificationFlags field is 0x0100.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXCNOTIF_R12401, MS-OXCNOTIF_R12402.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R12401</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableEventType] is available if the NotificationType value in the NotificationFlags field is 0x0100.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R124:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R12402</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableEventType] is not available if the NotificationType value in the NotificationFlags field is 0x0002.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R124:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R126</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] The following table lists the values [0x0001,0x0003,0x0004,0x0005,0x0007] that are available for event types.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCNOTIF_R128, MS-OXCNOTIF_R129, MS-OXCNOTIF_R130, MS-OXCNOTIF_R131, MS-OXCNOTIF_R132.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R127</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] For more details, see section 2.2.1.1.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R128</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [TableEventType value] 0x0001: The notification is for TableChanged events.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R129</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [TableEventType value] 0x0003: The notification is for TableRowAdded events.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R130</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [TableEventType value] 0x0004: The notification is for TableRowDeleted events.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R131</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [TableEventType value] 0x0005: The notification is for TableRowModified events.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R132</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [TableEventType value] 0x0007: The notification is for TableRestrictionChanged events.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R13201.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R13201</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] [TableEventType value] Implementation does support TableRestrictionChanged events (0x0007). (Exchange 2007 follows this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCTABL_R802:i,MS-OXCNOTIF_R132:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R140</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [TableRowFolderID] is 8 bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R141</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] TableRowFolderID: The value of the Folder ID structure, as specified in [MS-OXCDATA] section 2.2.1.1, of the item triggering the notification.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R142</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowFolderID] is available only if the TableEventType field is available and is 0x0003, 0x0004, or 0x0005.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXCNOTIF_R14201, MS-OXCNOTIF_R14202, MS-OXCNOTIF_R14203, MS-OXCNOTIF_R14204.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R14201</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowFolderID] is available if the TableEventType field is available and is 0x0003.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R142:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R14202</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowFolderID] is available if the TableEventType field is available and is 0x0004.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R142:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R14203</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowFolderID] is available if the TableEventType field is available and is 0x0005.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R142:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R14204</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowFolderID] is not available if the TableEventType field is 0x0001.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R142:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R144</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [TableRowMessageID] is 8 bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R145</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] TableRowMessageID: The value of the Message ID structure, as specified in [MS-OXCDATA] section 2.2.1.2, of the item triggering the notification.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R146</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowMessageID] is available only if bit 0x8000 is set in the NotificationFlags field and if the TableEventType field is available and is 0x0003, 0x0004, or 0x0005.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXCNOTIF_R14601, MS-OXCNOTIF_R14602, MS-OXCNOTIF_R14603, MS-OXCNOTIF_R14604.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R14601</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowMessageID] is available if bit 0x8000 is set in the NotificationFlags field and if the TableEventType field is available and is 0x0003.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R146:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R14602</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowMessageID] is available if bit 0x8000 is set in the NotificationFlags field and if the TableEventType field is available and is 0x0004.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R146:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R14603</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowMessageID] is available if bit 0x8000 is set in the NotificationFlags field and if the TableEventType field is available and is 0x0005.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R146:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R14604</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowMessageID] is not available if the TableEventType field is 0x0001.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R146:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R148</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [TableRowInstance] is 4 bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R149</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] TableRowInstance: An identifier of the instance of the previous row in the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R150</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowInstance] is available only if bit 0x8000 is set in the NotificationFlags field and if the TableEventType field is available and is 0x0003, 0x0004, or 0x0005.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXCNOTIF_R15001, MS-OXCNOTIF_R15002, MS-OXCNOTIF_R15003, MS-OXCNOTIF_R15004.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R15001</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowInstance] is available if bit 0x8000 is set in the NotificationFlags field and if the TableEventType field is available and is 0x0003.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R150:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R15002</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowInstance] is available if bit 0x8000 is set in the NotificationFlags field and if the TableEventType field is available and is 0x0004.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R150:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R15003</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowInstance] is available if bit 0x8000 is set in the NotificationFlags field and if the TableEventType field is available and is 0x0005.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R150:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R15004</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowInstance] is not available if the TableEventType field is 0x0001.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R150:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R152</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [InsertAfterTableRowFolderID] is 8 bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R153</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] InsertAfterTableRowFolderID: The old value of the Folder ID structure of the item triggering the notification.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R154</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [InsertAfterTableRowFolderID] is available only if the TableEventType field is available and is 0x0003 or 0x0005.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXCNOTIF_R15401, MS-OXCNOTIF_R15402, MS-OXCNOTIF_R15403.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R15401</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [InsertAfterTableRowFolderID] is available if the TableEventType field is available and is 0x0003.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R154:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R15402</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [InsertAfterTableRowFolderID] is available, if the TableEventType field is available and is 0x0005.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R154:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R15403</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [InsertAfterTableRowFolderID] is not available if the TableEventType field is 0x0001.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R154:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R156</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [InsertAfterTableRowID] is 8 bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R157</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] InsertAfterTableRowID: The old value of the Message ID structure of the item triggering the notification.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R158</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [InsertAfterTableRowID] is available only if bit 0x8000 is set in the NotificationFlags field and if the TableEventType field is available and is 0x0003 or 0x0005.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXCNOTIF_R15801, MS-OXCNOTIF_R15802, MS-OXCNOTIF_R15803.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R15801</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [InsertAfterTableRowID] is available if bit 0x8000 is set in the NotificationFlags field and if the TableEventType field is available and is 0x0003.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R158:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R15802</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [InsertAfterTableRowID] is available if bit 0x8000 is set in the NotificationFlags field and if the TableEventType field is available and is 0x0005.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R158:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R15803</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [InsertAfterTableRowID] is not available if the TableEventType field is 0x0001.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R158:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R160</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [InsertAfterTableRowInstance] is 4 bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R161</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] InsertAfterTableRowInstance: An unsigned 32-bit identifier of the instance of the row where the modified row is inserted</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R161001</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [InsertAfterTableRowInstance] is available only if bit 0x8000 is set in the NotificationFlags field and if the TableEventType field is available and is 0x0003 or 0x0005.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXCNOTIF_R161002, MS-OXCNOTIF_R161003, MS-OXCNOTIF_R161004.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R161002</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [InsertAfterTableRowInstance] is available when bit 0x8000 is set in the NotificationFlags field and if the TableEventType field is available and is 0x0003.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R161001:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R161003</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [InsertAfterTableRowInstance] is available when bit 0x8000 is set in the NotificationFlags field and if the TableEventType field is available and is 0x0005.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R161001:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R161004</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [InsertAfterTableRowInstance] is not available when bit 0x8000 is not set in the NotificationFlags field.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R161001:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R162</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [TableRowDataSize] is 2 bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R163</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] TableRowDataSize: An unsigned 16-bit integer that indicates the length of the table row data.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R164</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowDataSize] is available only if the TableEventType field is available and is 0x0003 or 0x0005.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXCNOTIF_R16401, MS-OXCNOTIF_R16402, MS-OXCNOTIF_R16403.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R16401</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowDataSize] is available if the TableEventType field is available and is 0x0003.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R164:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R16402</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowDataSize] is available only if the TableEventType field is available and is 0x0005.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R164:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R16403</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowDataSize] is not available if the TableEventType field is 0x0001.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R164:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R166</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] TableRowData (variable): The table row data, which contains a list of property values in a PropertyRow structure, as specified in [MS-OXCDATA] section 2.8, for the row that was added or modified in the table. </ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R166001</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] The property values to be included are determined by a previous RopSetColumns ROP, as specified in [MS-OXCTABL] section 2.2.2.2. </ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R167</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowData] is available only if the TableEventType field is available and is 0x0003 or 0x0005.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXCNOTIF_R16701, MS-OXCNOTIF_R16702, MS-OXCNOTIF_R16703.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R16701</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowData] is available if the TableEventType field is available and is 0x0003.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R167:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R16702</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowData] is available if the TableEventType field is available and is 0x0005.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R167:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R16703</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TableRowData] is not available  if the TableEventType field is 0x0001.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R167:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R169</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [FolderId] is 8 bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R170</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] FolderId: The Folder ID structure of the item triggering the event.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R171</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [FolderId] is available only if the NotificationType value in the NotificationFlags field is not 0x0100 or 0x0400.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXCNOTIF_R17101, MS-OXCNOTIF_R17103.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R17101</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [FolderId] is not available if the NotificationType value in the NotificationFlags field is 0x0100.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R171:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R17102</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [FolderId] is not available if the NotificationType value in the NotificationFlags field is 0x0400.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R171:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R17103</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [FolderId] is available if the NotificationType value in the NotificationFlags field is 0x0002.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R171:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R173</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [MessageId] is 8 bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R174</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] MessageId: The Message ID structure, as specified in [MS-OXCDATA] section 2.2.1.2, of the item triggering the event.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R175</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [MessageId] is available only if the NotificationType value in the NotificationFlags field is not 0x0100 or 0x0400, and bit 0x8000 is set in the NotificationFlags field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXCNOTIF_R17501, MS-OXCNOTIF_R17502.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R17501</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [MessageId] is available if the NotificationType value in the NotificationFlags field is 0x0002, and bit 0x8000 is set in the NotificationFlags field.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R175:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R17502</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [MessageId] is not available if the NotificationType value in the NotificationFlags field is 0x0100.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R175:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R17503</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [MessageId] is not available if the NotificationType value in the NotificationFlags field is 0x0400.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R175:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R177</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [ParentFolderId]  is 8 bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R178</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] ParentFolderId: The Folder ID structure of the parent folder of the item triggering the event.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R179</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [ParentFolderId] is available only if the value of the NotificationType in the NotificationFlags field is 0x0004, 0x0008, 0x0020, or 0x0040, and it [RopNotify ROP] is sent for either a message in a search folder (both bit 0x4000 and bit 0x8000 are set in the NotificationFlags field) or a folder (both bit 0x4000 and bit 0x8000 are not set in the NotificationFlags field).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXCNOTIF_R17901, MS-OXCNOTIF_R17902, MS-OXCNOTIF_R17905.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R17901</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [ParentFolderId] is available if the value of the NotificationType field is 0x0004, and it [RopNotify ROP] is sent for a message in a folder (both bit 0x4000 and bit 0x8000 are not set in the NotificationFlags field).</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R179:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R17902</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [ParentFolderId] is available if the value of the NotificationType field is 0x0008, and it [RopNotify ROP] is sent for a message in a folder (both bit 0x4000 and bit 0x8000 are not set in the NotificationFlags field).</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R179:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R17903</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [ParentFolderId] is available if the value of the NotificationType field is 0x0020, and it [RopNotify ROP] is sent for a search folder (both bit 0x4000 and bit 0x8000 are set in the NotificationFlags field).</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R179:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R17904</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [ParentFolderId] is available if the value of the NotificationType field is 0x0040, and it [RopNotify ROP] is sent for a search folder (both bit 0x4000 and bit 0x8000 are set in the NotificationFlags field).</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R179:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R17905</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [ParentFolderId] is not available if the value of the NotificationType field is 0x0002.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R179:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R181</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [OldFolderId] is 8 bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R182</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] OldFolderId: The old Folder ID structure of the item triggering the event.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R183</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [OldFolderId] is available only if the NotificationType value in the NotificationFlags field is 0x0020 or 0x0040.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXCNOTIF_R18301, MS-OXCNOTIF_R18302, MS-OXCNOTIF_R18303.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R18301</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [OldFolderId] is available if the NotificationType value in the NotificationFlags field is 0x0020.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R183:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R18302</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [OldFolderId] is available if the NotificationType value in the NotificationFlags field is 0x0040.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R183:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R18303</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [OldFolderId] is not available if the NotificationType value in the NotificationFlags field is 0x0002.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R183:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R185</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [OldMessageId] is 8 bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R186</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] OldMessageId: The old Message ID structure of the item triggering the event.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R187</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [OldMessageId] is available only if the value of the NotificationType in the NotificationFlags field is 0x0020 or 0x0040 and bit 0x8000 is set in the NotificationFlags field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXCNOTIF_R18701, MS-OXCNOTIF_R18702, MS-OXCNOTIF_R18703.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R18701</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [OldMessageId] is available if the value of the NotificationType in the NotificationFlags field is 0x0020 and bit 0x8000 is set in the NotificationFlags field.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R187:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R18702</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [OldMessageId] is available if the value of the NotificationType in the NotificationFlags field is 0x0040 and bit 0x8000 is set in the NotificationFlags field.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R187:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R18703</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [OldMessageId] is not available if the value of the NotificationType in the NotificationFlags field is 0x0002.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R187:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R189</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [OldParentFolderId] is 8 bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R190</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] OldParentFolderId: The old parent Folder ID structure of the item triggering the event.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R191</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [OldParentFolderId] is available only if the value of the NotificationType in the NotificationFlags field is 0x0020 or 0x0040 and bit 0x8000 is not set in the NotificationFlags field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXCNOTIF_R19101, MS-OXCNOTIF_R19103.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R19101</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [OldParentFolderId] is available if the value of the NotificationType in the NotificationFlags field is 0x0020 and bit 0x8000 is not set in the NotificationFlags field.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R191:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R19102</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [OldParentFolderId] is available if the value of the NotificationType in the NotificationFlags field is 0x0040 and bit 0x8000 is not set in the NotificationFlags field.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R191:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R19103</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [OldParentFolderId] is not available if the value of the NotificationType in the NotificationFlags field is 0x0002.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R191:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R193</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [TagCount]  is 2 bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R194</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] TagCount: An unsigned 16-bit integer that specifies the number of property tags in the Tags field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R195</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TagCount] is available only if the value of the NotificationType in the NotificationFlags field is 0x0004 or 0x0010.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXCNOTIF_R19501, MS-OXCNOTIF_R19502, MS-OXCNOTIF_R19503.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R19501</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TagCount] is available if the value of the NotificationType in the NotificationFlags field is 0x0004.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R195:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R19502</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TagCount] is available if the value of the NotificationType in the NotificationFlags field is 0x0010.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R195:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R19503</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TagCount] is not available if the value of the NotificationType in the NotificationFlags field is 0x0002.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R195:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R197</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] If the value of the NotificationType in the NotificationFlags field is 0x0010, the value of this field [TagCount] SHOULD&lt;9&gt; be set to 0x0000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirements: MS-OXCNOTIF_R198, MS-OXCNOTIF_R199.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R202</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] Tags (variable): An array of unsigned 32-bit integers that identifies the IDs of properties that have changed.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R203</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [Tags] is available only if the TagCount field is available and the value of the TagCount field is not 0x0000 or 0xFFFF.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R20301</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [Tags] is available if the TagCount field is available and the value of the TagCount field is  not 0x0000 or 0xFFFF .</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R203:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R20302</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [Tags] is not available if the TagCount field is available and the value of the TagCount field is 0x0000.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R203:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R20303</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [Tags] is not available if the TagCount field is available and the value of the TagCount field is 0xFFFF.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R203:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R205</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [TotalMessageCount]  is 4 bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R206</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] TotalMessageCount: An unsigned 32-bit integer that specifies the total number of items in the folder triggering this event.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R207</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TotalMessageCount] is available only if bit 0x1000 is set in the NotificationFlags field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R20701</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TotalMessageCount] is available if bit 0x1000 is set in the NotificationFlags field.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R207:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R20702</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [TotalMessageCount] is not available if bit 0x1000 is not set in the NotificationFlags field.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R207:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R209</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [UnreadMessageCount]  is 4 bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R210</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] UnreadMessageCount: An unsigned 32-bit integer that specifies the number of unread items in a folder triggering this event.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R211</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [UnreadMessageCount] is available only if bit 0x2000 is set in the NotificationFlags field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R21101</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [UnreadMessageCount] is available if bit 0x2000 is set in the NotificationFlags field.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R211:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R21102</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [UnreadMessageCount] is not available if bit 0x2000 is not set in the NotificationFlags field.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R211:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R213</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [MessageFlags] is 4 bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R214</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] MessageFlags: An unsigned 32-bit integer that specifies the message flags of new mail that has been received. &lt;10&gt;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirements: MS-OXCNOTIF_R214001, MS-OXCNOTIF_R214002</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R215</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [MessageFlags] is available only if the value of the NotificationType in the NotificationFlags field is 0x0002. For details, see [MS-OXCMSG] section 2.2.1.6.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXCNOTIF_R21501, MS-OXCNOTIF_R21502.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R21501</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [MessageFlags] is available if the value of the NotificationType in the NotificationFlags field is 0x0002. For details, see [MS-OXCMSG] section 2.2.1.6.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R215:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R21502</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [MessageFlags] is not available if the value of the NotificationType in the NotificationFlags field is 0x0004. For details, see [MS-OXCMSG] section 2.2.1.6.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R215:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R217</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] It [UnicodeFlag]  is 1 byte.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R218</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] UnicodeFlag: A value of TRUE (0x01) indicates the value of the MessageClass field is in Unicode.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R219</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure]  otherwise, [the value of UnicodeFlag is]FALSE (0x00) indicates the value of the MessageClass is in ASCII.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R220</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] A value of FALSE is returned if the client is working in cached mode, as specified by the ClientMode field in [MS-OXCRPC] section 2.2.2.2.4.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R221</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [UnicodeFlag] is available only if the value of the NotificationType field in the NotificationFlags field is 0x0002.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXCNOTIF_R22101, MS-OXCNOTIF_R22102.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R22101</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [UnicodeFlag] is available if the value of the NotificationType field in the NotificationFlags field is 0x0002.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R221:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R22102</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [UnicodeFlag] is not available if the value of the NotificationType field in the NotificationFlags field is 0x0004.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R221:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R223</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] MessageClass (variable): A null-terminated string containing the message class of the new mail.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R224</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] The string [MessageClass] is in Unicode if the UnicodeFlag field is set to TRUE (0x01).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R225</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] The string [MessageClass] is in ASCII if UnicodeFlag is set to FALSE (0x00).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R226</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [MessageClass] is available only if the value of the NotificationType in the NotificationFlags field is 0x0002.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXCNOTIF_R22601, MS-OXCNOTIF_R22602.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R22601</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [MessageClass] is available if the value of the NotificationType in the NotificationFlags field is 0x0002.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R226:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R22602</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4.1.2 </ns1:Doc_Sect>
		<ns1:Description>[In NotificationData Structure] This field [MessageClass] is not available if the value of the NotificationType in the NotificationFlags field is 0x0004.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R226:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R228</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Abstract Data Model] This section describes a conceptual model of possible data organization that an implementation maintains to participate in this protocol [MS-OXCNOTIF].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R229</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Abstract Data Model] The described organization is provided to facilitate the explanation of how the protocol behaves.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R230</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Abstract Data Model] This specification does not mandate that implementations adhere to this model as long as their external behavior is consistent with that described in this document.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R231</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Abstract Data Model] This protocol [MS-OXCNOTIF] includes the following abstract data model (ADM) elements:
Global.Handle, as specified in [MS-OXCRPC] section 3.1.1.
Global.AsynchronousHandle, as specified in [MS-OXCRPC] section 3.3.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R511</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Abstract Data Model] This protocol [MS-OXCNOTIF] includes the following abstract data model (ADM) elements: cookies, as specified in [MS-OXCMAPIHTTP] section 3.2.1.&lt;11&gt;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R232</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Abstract Data Model] The following ADM types are defined in this section: 
NotificationSubscriptionObject: An object on the server associated with the session context that manages event notifications and notification subscriptions.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R233</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.2</ns1:Doc_Sect>
		<ns1:Description>[In Timers] If push notifications are supported by the server, as specified in section 3.1.5.4, the server SHOULD allow for a 60-second interval between UDP datagrams until the client has retrieved all event information for the session.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R538.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R235</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.2</ns1:Doc_Sect>
		<ns1:Description>[In Timers] The server MUST provide server administrators a means to configure the time interval between the UDP datagrams.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R236</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1</ns1:Doc_Sect>
		<ns1:Description>[In Sending Pending Notifications] The server notifies the client of pending notifications in one of three ways: by completing an asynchronous EcDoAsyncWaitEx RPC method call, by using push notifications and sending a UDP datagram to a callback address, or by sending a RopPending ROP response ([MS-OXCROPS] section 2.2.14.3).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCNOTIF_R68, MS-OXCNOTIF_R79, MS-OXCNOTIF_R81.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R237</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1</ns1:Doc_Sect>
		<ns1:Description>[In Sending Pending Notifications] For more details about responding to an asynchronous RPC call, see section 3.1.5.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R238</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1</ns1:Doc_Sect>
		<ns1:Description>[In Sending Pending Notifications] For more details about using push notifications and sending a UDP datagram, see section 3.1.5.4.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R239</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1</ns1:Doc_Sect>
		<ns1:Description>[In Sending Pending Notifications] For more details about sending a RopPending ROP response, see section 3.1.5.6.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R240</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Sending Notification Details] The server sends notification details to the client by sending the RopNotify ROP response (section 2.2.1.4.1).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R241</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Sending Notification Details] The RopNotify command is the only method to transmit notification details to the client, so it is used regardless of the method used to notify the client of the pending notification.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R242</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Sending Notification Details] For more details about sending the RopNotify ROP, see section 3.1.5.7.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R243</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] If the client has subscribed to TableModified event notifications, by using the RopRegisterNotification ROP (section 2.2.1.2.1), the server SHOULD&lt;12&gt; require that a table view is created in order to send the TableModified event notifications, as specified in section 2.2.1.1.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirements: MS-OXCNOTIF_R244,  MS-OXCNOTIF_R245.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R246</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] If a table view is required on the server, the server MUST receive a request from one of the following ROPs, each of which cause a table view to be created on the server: RopCollapseRow ([MS-OXCROPS] section 2.2.5.17).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R248</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] If a table view is required on the server, the server MUST receive a request from one of the following ROPs, each of which cause a table view to be created on the server: RopExpandRow ([MS-OXCROPS] section 2.2.5.16).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R249</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] If a table view is required on the server, the server MUST receive a request from one of the following ROPs, each of which cause a table view to be created on the server: RopFindRow ([MS-OXCROPS] section 2.2.5.13).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R250</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] If a table view is required on the server, the server MUST receive a request from one of the following ROPs, each of which cause a table view to be created on the server: RopQueryColumnsAll ([MS-OXCROPS] section 2.2.5.12).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R251</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] If a table view is required on the server, the server MUST receive a request from one of the following ROPs, each of which cause a table view to be created on the server: RopQueryPosition ([MS-OXCROPS] section 2.2.5.7).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R252</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] If a table view is required on the server, the server MUST receive a request from one of the following ROPs, each of which cause a table view to be created on the server: RopQueryRows ([MS-OXCROPS] section 2.2.5.4).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R253</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] If a table view is required on the server, the server MUST receive a request from one of the following ROPs, each of which cause a table view to be created on the server: RopSeekRow ([MS-OXCROPS] section 2.2.5.8)</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R254</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] If a table view is required on the server, the server MUST receive a request from one of the following ROPs, each of which cause a table view to be created on the server: RopSeekRowFractional ([MS-OXCROPS] section 2.2.5.10).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R255</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] If a table view is required on the server, the server MUST receive a request from one of the following ROPs, each of which cause a table view to be created on the server: RopSeekRowBookmark ([MS-OXCROPS] section 2.2.5.9)</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R256</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] The server SHOULD then create a subscription to TableModified event notifications automatically for every table created on the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R257.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R258</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] The server MUST NOT create a subscription to table notifications for the tables that were created with a NoNotifications flag.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R259</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] For more details about the NoNotifications flag, see [MS-OXCFOLD] section 2.2.1.14.1 and [MS-OXCFOLD] section 2.2.1.13.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCFOLD_505, MS-OXCFOLD_1014.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R260</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] When a TableModified event occurs, the server generates a notification using one of the following three methods, [1. Generates an informative notification such as TableRowAdded. 2. Generates a basic notification for TableChanged. 3. Does not generate a notification at all.] listed in descending order of usefulness to the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCNOTIF_R261, MS-OXCNOTIF_R262, MS-OXCNOTIF_R263, MS-OXCNOTIF_R264, MS-OXCNOTIF_R265.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R261</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] [When a TableModified event occurs, the server generates a notification using one of the following three methods, listed in descending order of usefulness to the client.] For TableRowAdded event, the server generates an informative notification that specifies the nature of the change (content or hierarchy), the value of the Folder ID structure, as specified in [MS-OXCDATA] section 2.2.1.1, the value of the Message ID structure, as specified in [MS-OXCDATA] section 2.2.1.2, and new table values.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R262</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] [When a TableModified event occurs, the server generates a notification using one of the following three methods, listed in descending order of usefulness to the client.] For TableRowDeleted event, the server generates an informative notification that specifies the nature of the change (content or hierarchy), the value of the Folder ID structure, as specified in [MS-OXCDATA] section 2.2.1.1, the value of the Message ID structure, as specified in [MS-OXCDATA] section 2.2.1.2, and new table values.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R263</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] [When a TableModified event occurs, the server generates a notification using one of the following three methods, listed in descending order of usefulness to the client.] For TableRowModified event, the server generates an informative notification that specifies the nature of the change (content or hierarchy), the value of the Folder ID structure, as specified in [MS-OXCDATA] section 2.2.1.1, the value of the Message ID structure, as specified in [MS-OXCDATA] section 2.2.1.2, and new table values.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R264</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] [When a TableModified event occurs, the server generates a notification using one of the following three methods, listed in descending order of usefulness to the client.] For TableChanged event, the server generates a basic notification that does not include specifics about the change made.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R265</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] [When a TableModified event occurs, the server generates a notification using one of the following three methods, listed in descending order of usefulness to the client.] For TableRestrictionChanged event, the server generates a basic notification that does not include specifics about the change made.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R266</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] [When a TableModified event occurs, the server generates a notification using one of the following three methods, listed in descending order of usefulness to the client.] The server does not generate a notification at all.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R267</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] The notification level is server implementation-specific.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R268</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] However, the server SHOULD generate informative notifications whenever possible.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R269.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R270</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] the server SHOULD only generate a basic notification when it is not feasible to generate an informative notification.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R271.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R272</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] The server SHOULD&lt;13&gt; stop sending notifications if the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15) is received, until a new table view is created using one of the following ROPs: RopCollapseRow.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R273</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] The server SHOULD&lt;13&gt; stop sending notifications if the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15) is received, until a new table view is created using one of the following ROPs: RopExpandRow.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R274</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] The server SHOULD&lt;13&gt; stop sending notifications if the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15) is received, until a new table view is created using one of the following ROPs: RopFindRow.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirements: MS-OXCNOTIF_R275, MS-OXCNOTIF_R294.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R276</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] The server SHOULD&lt;13&gt; stop sending notifications if the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15) is received, until a new table view is created using one of the following ROPs:  RopQueryColumnsAll.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R277.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R278</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] The server SHOULD&lt;13&gt; stop sending notifications if the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15) is received, until a new table view is created using one of the following ROPs: RopQueryPosition.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R279.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R280</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] The server SHOULD&lt;13&gt; stop sending notifications if the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15) is received, until a new table view is created using one of the following ROPs: RopQueryRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R281.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R282</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] The server SHOULD&lt;13&gt; stop sending notifications if the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15) is received, until a new table view is created using one of the following ROPs: RopSeekRow.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R283.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R284</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] The server SHOULD&lt;13&gt; stop sending notifications if the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15) is received, until a new table view is created using one of the following ROPs: RopSeekRowFractional.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R285</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Creating and Sending TableModified Event Notifications] The server SHOULD&lt;13&gt; stop sending notifications if the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15) is received, until a new table view is created using one of the following ROPs: RopSeekRowBookmark.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R286.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R287</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Receiving a RopRegisterNotification ROP Request] When a RopRegisterNotification ROP (section 2.2.1.2.1) message is received by the server, the server SHOULD create a new Notification Subscription object and associate it with the session context.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R288.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R289</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Receiving a RopRegisterNotification ROP Request] [When a RopRegisterNotification ROP message is received by the server.] The server SHOULD save the information provided in the RopRegisterNotification ROP request fields for future use.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R290.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R291</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Receiving a RopRegisterNotification ROP Request] The server SHOULD allow multiple Notification Subscription objects to be created and associated with the same session context.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R292.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R293</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Receiving a RopRegisterNotification ROP Request] For details about how the client sends the RopRegisterNotification ROP request, see section 3.2.5.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R295</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcDoAsyncConnectEx Method Call] The server SHOULD&lt;14&gt; support the EcDoAsyncConnectEx method call, as specified in [MS-OXCRPC] section 3.1.4.4.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R297.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R298</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcDoAsyncConnectEx Method Call] When a call to the EcDoAsyncConnectEx RPC, as specified in [MS-OXCRPC] section 3.1.4.4, is received by the server, the server MUST create an asynchronous context handle.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R299</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcDoAsyncConnectEx Method Call] When a call to the EcDoAsyncConnectEx RPC, as specified in [MS-OXCRPC] section 3.1.4.4, is received by the server, the server MUST bind it [asynchronous context handle] to the session context handle used to make the call.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R300</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.3</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcDoAsyncWaitEx Method Call] The server SHOULD&lt;15&gt; support the EcDoAsyncWaitEx method call, as specified in [MS-OXCRPC] section 3.3.4.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R302.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R303</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.3</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcDoAsyncWaitEx Method Call] Whenever an asynchronous EcDoAsyncWaitEx method call, as specified in [MS-OXCRPC] section 3.3.4.1, on the AsyncEMSMDB interface is received by the server, the server MUST validate that the asynchronous context handle provided is a valid asynchronous context handle that was returned from the EcDoAsyncConnectEx method call, as specified in [MS-OXCRPC] section 3.1.4.4.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R304</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.3</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcDoAsyncWaitEx Method Call] The server SHOULD NOT complete the call [EcDoAsyncWaitEx Method Call] until there is a notification for the client session.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R305.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R306</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.3</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcDoAsyncWaitEx Method Call] The server SHOULD NOT complete the call [EcDoAsyncWaitEx Method Call] until the call has been outstanding on the server 5 minutes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R307.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R308</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.3</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcDoAsyncWaitEx Method Call] If the server already has a call outstanding for the same session context handle, the server SHOULD complete the new call and set the ErrorCode field to Rejected, as specified in [MS-OXCRPC] section 3.3.4.1, if another asynchronous RPC call is currently in progress on the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCRPC_R1343.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R310</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.3</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcDoAsyncWaitEx Method Call] If the server completes the outstanding RPC call when there is a notification for the client session, the server MUST return the value NotificationPending in the pulFlagsOut field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R311</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.3</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcDoAsyncWaitEx Method Call] The server MUST return 0x00000000 in the pulFlagsOut field if the call [outstanding RPC call] was completed when there is no notification for the client session.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R312</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.4</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcRRegisterPushNotification Method Call] The server MAY&lt;16&gt; support the EcRRegisterPushNotification method call, as specified in [MS-OXCRPC] section 3.1.4.5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R313.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R317</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.4</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcRRegisterPushNotification Method Call] When a call to the EcRRegisterPushNotification method is received by the server, a valid callback address in the rgbCallbackAddress field and buffer with opaque client data in the rgbContext field MUST be present.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R318</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.4</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcRRegisterPushNotification Method Call] The server MUST fail the call [EcRRegisterPushNotification Method Call], if the callback address is not a valid SOCKADDR structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R319</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.4</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcRRegisterPushNotification Method Call] The server MUST NOT take any actions if the callback address is not a valid SOCKADDR structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R466</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.4</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcRRegisterPushNotification Method Call] For more information, see [MSDN-WS2].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R320</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.4</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcRRegisterPushNotification Method Call] The server SHOULD support at a minimum the AF_INET address type for IP support.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R321.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R322</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.4</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcRRegisterPushNotification Method Call] The server SHOULD support at a minimum the AF_INET6 address type for IPv6 support.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R323.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R324</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.4</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcRRegisterPushNotification Method Call] The server MUST save the callback address and opaque context data on the session context for future use.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R325</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.4</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcRRegisterPushNotification Method Call] After the callback address has been successfully registered with the server, the server SHOULD send a UDP datagram containing the client's opaque data, from the rgbContext field, when a notification becomes available for the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R326.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R327</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.4</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcRRegisterPushNotification Method Call] If the server supports sending push notification UDP datagrams, the server MUST continue sending a UDP datagram to the callback address at 60-second intervals if event details are still queued for the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R539.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R328</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.4</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcRRegisterPushNotification Method Call] The server SHOULD stop sending UDP datagrams only when all of the notifications have been retrieved from the server through EcDoRpcExt2 method calls, as specified in [MS-OXCRPC] section 3.1.4.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R331.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R332</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.5</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcDoRpcExt] When the server receives an EcDoRpcExt2 method call, as specified in [MS-OXCRPC] section 3.1.4.2, if there are pending notifications on the server, the server SHOULD send a RopNotify ROP response (section 2.2.1.4.1) for each pending notification on the session context that is associated with the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCNOTIF_R346.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R334</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.5</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcDoRpcExt] If all the RopNotify ROP responses do not fit in the response buffer, the server SHOULD include as many RopNotify ROP responses as will fit in the response, and then include a RopPending ROP response ([MS-OXCROPS] section 2.2.14.3) to indicate that additional notifications are available on the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R335.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R336</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.5</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcDoRpcExt] For more details, see section 3.1.5.6 and section 3.1.5.7.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R337</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.5</ns1:Doc_Sect>
		<ns1:Description>[In Receiving an EcDoRpcExt] The server does not require that the EcDoRpcExt2 method call include a ROP request.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R338</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.6</ns1:Doc_Sect>
		<ns1:Description>[In Sending a RopPending ROP Response] The server SHOULD send a RopPending ROP response (section 2.2.1.3.4) to the client whenever there are pending notifications on the session context associated with the client and the RopNotify ROP response (section 2.2.1.4.1) for the associated notification does not fit in the response buffer.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCNOTIF_R335.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R342</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.6</ns1:Doc_Sect>
		<ns1:Description>[In Sending a RopPending ROP Response] The server sends a RopPending ROP response to the client whenever there are pending notifications on any linked session contexts.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R345</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.7</ns1:Doc_Sect>
		<ns1:Description>[In Sending a RopNotify ROP Response] The server SHOULD send a RopNotify ROP response (section 2.2.1.4.1) to the client for each pending notification on the session context that is associated with the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R346.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R347</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.7</ns1:Doc_Sect>
		<ns1:Description>[In Sending a RopNotify ROP Response] The server SHOULD send as many RopNotify ROP responses as the response buffer allows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R348.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R349</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.5.7</ns1:Doc_Sect>
		<ns1:Description>[In Sending a RopNotify ROP Response] If the server was not able to fit the details for all pending notifications into the response buffer using RopNotify ROP responses, it SHOULD include a RopPending ROP response (section 2.2.1.3.4) to indicate there are additional notifications available on the server, if the RopPending ROP response fits in the response buffer.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCNOTIF_R335.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R351</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.7</ns1:Doc_Sect>
		<ns1:Description>[In Other Local Events] The server events and table events specified in section 2.2.1.1 [NewMail, ObjectCopied, ObjectCreated, ObjectDeleted, ObjectModified, ObjectMoved, SearchComplete, TableModified] and section 2.2.1.1.1 [TableChanged, TableRowAdded, TableRowDeleted, TableRowModified, TableRestrictionChanged] that occur on the server cause the pending notifications and notification detail messages to be sent.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCNOTIF_R103, MS-OXCNOTIF_R104, MS-OXCNOTIF_R105, MS-OXCNOTIF_R106, MS-OXCNOTIF_R107, MS-OXCNOTIF_R108, MS-OXCNOTIF_R109, MS-OXCNOTIF_R110, MS-OXCNOTIF_R128, MS-OXCNOTIF_R129, MS-OXCNOTIF_R130, MS-OXCNOTIF_R131, MS-OXCNOTIF_R26, MS-OXCNOTIF_R27, MS-OXCNOTIF_R28.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R352</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.7</ns1:Doc_Sect>
		<ns1:Description>[In Other Local Events] How the server triggers each of these events is implementation dependent and external to this protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R353</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.3</ns1:Doc_Sect>
		<ns1:Description>[In Initialization] Protocol initialization occurs when a client sends a request to the server to subscribe to notifications from the server, as specified in section 3.2.4.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R518</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4</ns1:Doc_Sect>
		<ns1:Description>[Higher-Layer Triggered Events] The following sections specify the client-side higher-layer triggered events for this protocol [MS-OXCNOTIF].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R354</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.1</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to Notifications] The client sends the RopRegisterNotification ROP request (section 2.2.1.2.1) to the server to subscribe to all notifications specified in section 2.2.1.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R355</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.1</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to Notifications] For more details about sending the RopRegisterNotification ROP request, see section 3.2.5.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R356</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to TableModified Event Notifications] For a client to receive TableModified event notifications, in addition to sending the RopRegisterNotification ROP request, the client SHOULD&lt;17&gt; also send the one of the following ROPs to the server, which causes a table view to be created: RopCollapseRow ([MS-OXCROPS] section 2.2.5.17).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R357</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to TableModified Event Notifications] For a client to receive TableModified event notifications, in addition to sending the RopRegisterNotification ROP request, the client SHOULD&lt;17&gt; also send the one of the following ROPs to the server, which causes a table view to be created: RopExpandRow ([MS-OXCROPS] section 2.2.5.16).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R358</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to TableModified Event Notifications] For a client to receive TableModified event notifications, in addition to sending the RopRegisterNotification ROP request, the client SHOULD&lt;17&gt; also send the one of the following ROPs to the server, which causes a table view to be created: RopFindRow ([MS-OXCROPS] section 2.2.5.13).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R360</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to TableModified Event Notifications] For a client to receive TableModified event notifications, in addition to sending the RopRegisterNotification ROP request, the client SHOULD&lt;17&gt; also send the one of the following ROPs to the server, which causes a table view to be created: RopQueryColumnsAll ([MS-OXCROPS] section 2.2.5.12).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R362</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to TableModified Event Notifications] For a client to receive TableModified event notifications, in addition to sending the RopRegisterNotification ROP request, the client SHOULD&lt;17&gt; also send the one of the following ROPs to the server, which causes a table view to be created: RopQueryPosition ([MS-OXCROPS] section 2.2.5.7).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R364</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to TableModified Event Notifications] For a client to receive TableModified event notifications, in addition to sending the RopRegisterNotification ROP request, the client SHOULD&lt;17&gt; also send the one of the following ROPs to the server, which causes a table view to be created: RopQueryRows ([MS-OXCROPS] section 2.2.5.4).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R366</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to TableModified Event Notifications] For a client to receive TableModified event notifications, in addition to sending the RopRegisterNotification ROP request, the client SHOULD&lt;17&gt; also send the one of the following ROPs to the server, which causes a table view to be created: RopSeekRow ([MS-OXCROPS] section 2.2.5.8).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R368</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to TableModified Event Notifications] For a client to receive TableModified event notifications, in addition to sending the RopRegisterNotification ROP request, the client SHOULD&lt;17&gt; also send the one of the following ROPs to the server, which causes a table view to be created: RopSeekRowFractional ([MS-OXCROPS] section 2.2.5.10).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R369</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to TableModified Event Notifications] For a client to receive TableModified event notifications, in addition to sending the RopRegisterNotification ROP request, the client SHOULD&lt;17&gt; also send the one of the following ROPs to the server, which causes a table view to be created: RopSeekRowBookmark ([MS-OXCROPS] section 2.2.5.9).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R373</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to TableModified Event Notifications] Once a table view has been created, the client will receive TableModified event notifications so long as the NoNotifications flag has not been set on the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R375</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to TableModified Event Notifications] The NoNotifications flag is specified in [MS-OXCFOLD] section 2.2.1.14.1 and [MS-OXCFOLD] section 2.2.1.13.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R376</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to TableModified Event Notifications] If the client sends the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15), the client SHOULD&lt;18&gt; stop receiving table notifications until one of the following ROPs is sent: RopCollapseRow.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R377</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to TableModified Event Notifications] If the client sends the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15), the client SHOULD&lt;18&gt; stop receiving table notifications until one of the following ROPs is sent: RopExpandRow.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R378</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to TableModified Event Notifications] If the client sends the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15), the client SHOULD&lt;18&gt; stop receiving table notifications until one of the following ROPs is sent: RopFindRow.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R379</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to TableModified Event Notifications] If the client sends the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15), the client SHOULD&lt;18&gt; stop receiving table notifications until one of the following ROPs is sent: RopQueryColumnsAll.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R380</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to TableModified Event Notifications] If the client sends the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15), the client SHOULD&lt;18&gt; stop receiving table notifications until one of the following ROPs is sent: RopQueryPosition.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R381</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to TableModified Event Notifications] If the client sends the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15), the client SHOULD&lt;18&gt; stop receiving table notifications until one of the following ROPs is sent: RopQueryRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R382</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to TableModified Event Notifications] If the client sends the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15), the client SHOULD&lt;18&gt; stop receiving table notifications until one of the following ROPs is sent: RopSeekRow.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R383</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to TableModified Event Notifications] If the client sends the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15), the client SHOULD&lt;18&gt; stop receiving table notifications until one of the following ROPs is sent: RopSeekRowFractional.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R384</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Subscribing to TableModified Event Notifications] If the client sends the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15), the client SHOULD&lt;18&gt; stop receiving table notifications until one of the following ROPs is sent: RopSeekRowBookmark.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R391</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Initializing Asynchronous RPC Notifications] The client SHOULD&lt;19&gt; support the use of asynchronous RPCs as means to notify the client of pending notifications.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R392</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Initializing Asynchronous RPC Notifications] To initialize asynchronous RPC notifications on the server, the client sends the EcDoAsyncConnectEx method, as specified in [MS-OXCRPC] section 3.1.4.4, followed by the EcDoAsyncWaitEx method, as specified in [MS-OXCRPC] section 3.3.4.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R393</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Initializing Asynchronous RPC Notifications] For more details about sending these two methods, see section 3.2.5.2 and section 3.2.5.3 respectively.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R394</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.4</ns1:Doc_Sect>
		<ns1:Description>[In Initializing Push Notifications] As an alternate to polling, the client MAY&lt;20&gt; support receiving push notifications from the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R395</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.4</ns1:Doc_Sect>
		<ns1:Description>[In Initializing Push Notifications] Push notifications use UDP datagrams as a means to notify the client of pending notifications.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R396</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.4</ns1:Doc_Sect>
		<ns1:Description>[In Initializing Push Notifications] To initialize push notifications and register a callback address on the server, the client sends the EcRRegisterPushNotification method, as specified in section 3.2.5.4.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R397</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.4</ns1:Doc_Sect>
		<ns1:Description>[In Initializing Push Notifications] Clients that do not support push notifications SHOULD use either the basic polling method or the asynchronous RPC notification method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R398</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.5</ns1:Doc_Sect>
		<ns1:Description>[In Polling the Server for Notifications] In cases where neither push notifications nor asynchronous RPC notifications are being used, and the client is not actively calling the EcDoRpcExt2 method, as specified in [MS-OXCRPC] section 3.1.4.2, the client MUST poll the server for pending notifications.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R519</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.5</ns1:Doc_Sect>
		<ns1:Description>[In Polling the Server for Notifications] In cases where neither push notifications nor asynchronous RPC notifications are being used, and the client is not actively calling the Execute request type, &lt;21&gt;, as specified in [MS-OXCMAPIHTTP] section 2.2.4.2, the client MUST poll the server for pending notifications.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R399</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.5</ns1:Doc_Sect>
		<ns1:Description>[In Polling the Server for Notifications] To poll the server for pending notifications, the client MUST make EcDoRpcExt2 method calls as specified in section 3.2.5.6.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R520</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.5</ns1:Doc_Sect>
		<ns1:Description>[In Polling the Server for Notifications] To poll the server for pending notifications, the client MUST send the Execute request type.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R400</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.5</ns1:Doc_Sect>
		<ns1:Description>[In Polling the Server for Notifications] The EcDoRPCExt2 method call does not require a ROP request is included in the call [EcDoRPCExt2].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R401</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.5</ns1:Doc_Sect>
		<ns1:Description>[In Polling the Server for Notifications] If the client is polling the server, the client SHOULD poll at a regular interval, as specified by the value of the pcmsPollsMax field returned on the EcDoConnectEx method call, as specified in [MS-OXCRPC] section 3.1.4.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R403</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.5</ns1:Doc_Sect>
		<ns1:Description>[In Polling the Server for Notifications] If the client is polling the server, the client SHOULD NOT poll more frequently than the interval specified by the value of the pcmsPollsMax field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R405</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4.5</ns1:Doc_Sect>
		<ns1:Description>[In Polling the Server for Notifications] If the client is required to respond to notifications at a rate that is more frequent than the polling interval, then the polling method SHOULD NOT be used for retrieving notifications.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R521</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5</ns1:Doc_Sect>
		<ns1:Description>[Message Processing Events and Sequencing Rules] The following sections specify the client-side message processing events and sequencing rules for this protocol [MS-OXCNOTIF].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R406</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Sending a RopRegisterNotification ROP Request] If the client is required to receive notifications from the server, the client SHOULD send a RopRegisterNotification ROP (section 2.2.1.2.1) message to the server to subscribe to notifications.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R407</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Sending a RopRegisterNotification ROP Request] The client MUST provide specific details about the notifications it needs to receive and the scope of the notifications, as specified in section 2.2.1.2.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R408</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Sending a RopRegisterNotification ROP Request] Upon receiving the RopRegisterNotification ROP response from the server, the client MUST save the returned handle to the Notification Subscription object.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R409</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Sending a RopRegisterNotification ROP Request] When the client no longer needs to receive notifications, the handle of the Notification Subscription object MUST be released by using the RopRelease ROP ([MS-OXCROPS] section 2.2.15.3).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R410</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Sending a RopRegisterNotification ROP Request] The client can send the RopRegisterNotification ROP message multiple times to the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R411</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcDoAsyncConnectEx Method Call] The client sends the EcDoAsyncConnectEx method, as specified in [MS-OXCRPC] section 3.1.4.4, to initialize the server for asynchronous RPC notifications.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R412</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcDoAsyncConnectEx Method Call] The client SHOULD determine whether the server supports the EcDoAsyncConnectEx method by examining the server version information that is returned from the EcDoConnectEx method call, as specified in [MS-OXCRPC] section 3.1.4.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R413</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcDoAsyncConnectEx Method Call] For details about which minimum server version is required for using the asynchronous RPC notification method, see section 1.7.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R414</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcDoAsyncConnectEx Method Call] The client can call the EcDoAsyncConnectEx method after a successful EcDoConnectEx method call.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R415</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcDoAsyncConnectEx Method Call] The client MUST save the returned asynchronous context handle after the EcDoAsyncConnectEx method call completes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R416</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcDoAsyncConnectEx Method Call] The client MUST use the asynchronous context handle in the subsequent EcDoAsyncWaitEx method calls to the server, as specified in [MS-OXCRPC] section 3.3.4.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R417</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.3</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcDoAsyncWaitEx Method Call] The client determines whether the server supports the asynchronous RPC notification method by examining the server version information that is returned from the EcDoConnectEx method call, as described in [MS-OXCRPC] section 3.1.4.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R418</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.3</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcDoAsyncWaitEx Method Call] To determine which minimum server version is required for using the asynchronous RPC notification method, see section 1.7.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R419</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.3</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcDoAsyncWaitEx Method Call] If the server supports asynchronous RPC notifications, and the client successfully created asynchronous context handle by calling the EcDoAsyncConnectEx method, as specified in [MS-OXCRPC] section 3.1.4.4, the client SHOULD call the EcDoAsyncWaitEx method, as specified in [MS-OXCRPC] section 3.3.4.1, to determine whether notifications are pending on the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R420</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.3</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcDoAsyncWaitEx Method Call] For more details about receiving an EcDoAsyncWaitEx method response from the server, see section 3.2.5.5.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R421</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.4</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcRRegisterPushNotification Method Call] The client MAY&lt;22&gt; make an EcRRegisterPushNotification method call, as specified in [MS-OXCRPC] section 3.1.4.5, to register a callback address for the session context with the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R422</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.4</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcRRegisterPushNotification Method Call] The callback address is required in order to receive push notification UDP datagrams from the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R423</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.4</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcRRegisterPushNotification Method Call] In addition to the callback address, the client MUST provide a buffer of opaque data to the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R424</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.4</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcRRegisterPushNotification Method Call] The client can register a variety of different callback address types if the server supports the address type.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R425</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.4</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcRRegisterPushNotification Method Call] A client SHOULD register a callback address by using an address type that corresponds to the protocol being used to communicate with the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R426</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.4</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcRRegisterPushNotification Method Call] For example, if the client makes an RPC call to EcDoConnectEx, as specified in [MS-OXCRPC] section 3.1.4.1, by using the TCP/IP protocol, it registers an AF_INET callback address in the EcRRegisterPushNotification method call.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R427</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.4</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcRRegisterPushNotification Method Call] Because of network conditions such as firewalls or the use of RPC/HTTP connections by the client, it is not always possible for the UDP datagram that is sent from the server to the client's callback address to be successful.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R428</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.4</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcRRegisterPushNotification Method Call] To overcome this problem [network conditions], the client SHOULD poll the server by using the polling method, even after registering a callback address with the server through an EcRRegisterPushNotification method call, until it receives a UDP datagram from the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R429</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.4</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcRRegisterPushNotification Method Call] When the client receives a UDP datagram from the server at the specified callback address, it SHOULD stop polling the server and rely on datagrams pushed from the server to know when to call the EcDoRpcExt2 method, as specified in [MS-OXCRPC] section 3.1.4.2, to retrieve event information.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R430</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.5</ns1:Doc_Sect>
		<ns1:Description>[In Receiving Pending Notifications] This section specifies the following actions performed by the client to receive pending notifications:
1.Receiving the RopPending ROP response (section 2.2.1.3.4). 2.Receiving push notification UDP datagrams. 3.Sending and receiving asynchronous RPC calls.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R431</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Sending and Receiving EcDoAsyncWaitEx Method Calls] When a call to the EcDoAsyncWaitEx method completes, as specified in [MS-OXCRPC] section 3.3.4.1, the client MUST examine its return value and the value of the pulFlagsOut field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R432</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Sending and Receiving EcDoAsyncWaitEx Method Calls] If the return value is 0x00000000 and bit 0x00000001 is set in the pulFlagsOut field, the client SHOULD make EcDoRpcExt2 method calls, as specified in [MS-OXCRPC] section 3.1.4.2, to receive notification details from the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R433</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Sending and Receiving EcDoAsyncWaitEx Method Calls] After the successful results of the EcDoAsyncWaitEx method call are processed, the client SHOULD make another EcDoAsyncWaitEx method call to continue to listen for more notifications.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R434</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Sending and Receiving EcDoAsyncWaitEx Method Calls] If the EcDoAsyncWaitEx method returns a non-zero result code, it indicates that an error occurred.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R435</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Sending and Receiving EcDoAsyncWaitEx Method Calls] In this case [If the EcDoAsyncWaitEx method returns a non-zero result code], the client SHOULD NOT retry an EcDoAsyncWaitEx method call, and SHOULD instead use the push notification method specified in section 3.2.4.4.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R436</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Sending and Receiving EcDoAsyncWaitEx Method Calls] If the push notification method is not supported, the client SHOULD instead use the polling method specified in section 3.2.4.5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R437</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Receiving Push Notification UDP Datagrams] Upon receiving a UDP datagram on the callback address that was previously registered by the client by means of the EcRRegisterPushNotification method, as specified in [MS-OXCRPC] section 3.1.4.5, the client MUST verify that the content of the UDP datagram is valid by matching it with the content of the opaque data binary large object (BLOB) that was provided to the server by means of the EcRRegisterPushNotification method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R438</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Receiving Push Notification UDP Datagrams] [Upon receiving a UDP datagram on the callback address that was previously registered by the client by means of the EcRRegisterPushNotification method] If the content of the UDP datagram is valid, the client SHOULD make EcDoRpcExt2 method calls, as specified in [MS-OXCRPC] section 3.1.4.2, to receive notification details from the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R439</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Receiving Push Notification UDP Datagrams] Otherwise [If the content of the UDP datagram is not valid], the client MUST NOT take any actions on the UDP datagram.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R440</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.5.3</ns1:Doc_Sect>
		<ns1:Description>[In Receiving the RopPending ROP] Upon receiving the RopPending ROP response (section 2.2.1.3.4) in the buffer of the EcDoRpcExt2 method call, as specified in [MS-OXCRPC] section 3.1.4.2, the client MUST determine whether the session index provided in the RopPending ROP reponse matches any of the sessions created by the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R522</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.5.3</ns1:Doc_Sect>
		<ns1:Description>[In Receiving the RopPending ROP] Upon receiving the RopPending ROP response (section 2.2.1.3.4) in the Execute request type request body,&lt;23&gt; as specified in [MS-OXCMAPIHTTP] section 2.2.4.2.1, the client MUST determine whether the session index provided in the RopPending ROP response matches any of the sessions created by the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R441</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.5.3</ns1:Doc_Sect>
		<ns1:Description>[In Receiving the RopPending ROP] [Upon receiving the RopPending ROP response (section 2.2.1.3.4) in the buffer of the EcDoRpcExt2 method call] If the session index matches, the client SHOULD make an EcDoRpcExt2 method call to receive notification details from the server by using the session context handle that is associated with the session specified by the session index.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R523</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.5.3</ns1:Doc_Sect>
		<ns1:Description>[In Receiving the RopPending ROP] [Upon receiving the RopPending ROP response (section 2.2.1.3.4) in the buffer of the EcDoRpcExt2 method call] If the session index matches, the client SHOULD send an Execute request type to receive notification details from the server by using the session context handle that is associated with the session specified by the session index.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R442</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.5.3</ns1:Doc_Sect>
		<ns1:Description>[In Receiving the RopPending ROP] If the session index in RopPending ROP does not match the index of any session created by the client, the client MUST NOT take any actions.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R443</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.6</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcDoRpcExt] The client can send the EcDoRpcExt2 method, as specified in [MS-OXCRPC] section 3.1.4.2, as part of client polling as specified in section 3.2.4.5 with no ROP request operation included in the method call.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R444</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.6</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcDoRpcExt] the client can send the EcDoRpcExt2 method as part of a communication pattern unrelated to notifications.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R445</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.6</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcDoRpcExt] In either case [The client can send the EcDoRpcExt2 method, as specified in [MS-OXCRPC] section 3.1.4.2, as part of client polling as specified in section 3.2.4.5 with no ROP request operation included in the method call], if any pending notifications exist on the server, the client receives a RopNotify (section 2.2.1.4.1) ROP in response to their EcDoRpcExt2 method call, as specified in section 3.1.5.5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R472</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.6</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcDoRpcExt] In either case [The client can send the EcDoRpcExt2 method, as specified in [MS-OXCRPC] section 3.1.4.2, as part of client polling as specified in section 3.2.4.5 with no ROP request operation included in the method call], if any pending notifications exist on the server, the client receives a RopPending ([MS-OXCROPS] section 2.2.14.3) ROP in response to their EcDoRpcExt2 method call, as specified in section 3.1.5.5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R458</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.6</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcDoRpcExt] In either case [the client can send the EcDoRpcExt2 method as part of a communication pattern unrelated to notifications.], if any pending notifications exist on the server, the client receives a RopNotify (section 2.2.1.4.1) ROP in response to their EcDoRpcExt2 method call, as specified in section 3.1.5.5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R473</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.6</ns1:Doc_Sect>
		<ns1:Description>[In Sending an EcDoRpcExt] In either case [the client can send the EcDoRpcExt2 method as part of a communication pattern unrelated to notifications.], if any pending notifications exist on the server, the client receives either a RopPending ([MS-OXCROPS] section 2.2.14.3) ROP in response to their EcDoRpcExt2 method call, as specified in section 3.1.5.5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R446</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.7</ns1:Doc_Sect>
		<ns1:Description>[In Receiving Notification Details By Using the RopNotify ROP] After the client is notified of pending notifications by any of the methods described in section 3.2.5.5 [Receiving the RopPending ROP response , Receiving push notification UDP datagrams, receiving asynchronous RPC calls] the client calls the EcDoRpcExt2 method, as described in [MS-OXCRPC] section 3.1.4.2, to retrieve the notification details.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R524</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.7</ns1:Doc_Sect>
		<ns1:Description>[In Receiving Notification Details By Using the RopNotify ROP] After the client is notified of pending notifications by any of the methods described in section 3.2.5.5 [Receiving the RopPending ROP response , Receiving push notification UDP datagrams, receiving asynchronous RPC calls] the client sends an Execute request type&lt;24&gt;, as specified in [MS-OXCMAPIHTTP] section 2.2.4.2, to retrieve the notification details.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R447</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.7</ns1:Doc_Sect>
		<ns1:Description>[In Receiving Notification Details By Using the RopNotify ROP] In response to the EcDoRpcExt2 method, the client receives a RopNotify ROP response (section 2.2.1.4.1).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R525</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.7</ns1:Doc_Sect>
		<ns1:Description>[In Receiving Notification Details By Using the RopNotify ROP] In response to the Execute request, the client receives a RopNotify ROP response (section 2.2.1.4.1).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R448</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.7</ns1:Doc_Sect>
		<ns1:Description>[In Receiving Notification Details By Using the RopNotify ROP] Upon receiving a RopNotify ROP response, the client MUST verify that the value of the NotificationHandle field is a valid handle to a notification subscription or a Table object that was previously created by the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R449</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.7</ns1:Doc_Sect>
		<ns1:Description>[In Receiving Notification Details By Using the RopNotify ROP] [Upon receiving a RopNotify ROP response, the client MUST verify that the value of the NotificationHandle field is a valid handle to a notification subscription or a Table object that was previously created by the client] If the value of the NotificationHandle field is valid, the client can update its internal state by using the details provided in the RopNotify ROP response.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R450</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.7</ns1:Doc_Sect>
		<ns1:Description>[In Receiving Notification Details By Using the RopNotify ROP] [Upon receiving a RopNotify ROP response, the client MUST verify that the value of the NotificationHandle field is a valid handle to a notification subscription or a Table object that was previously created by the client.] Otherwise [If the value of the NotificationHandle field is not valid], the client MUST ignore the RopNotify ROP response.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R451</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.7</ns1:Doc_Sect>
		<ns1:Description>[In Receiving Notification Details By Using the RopNotify ROP] When the client subscribes to TableModified event notifications, the client MUST NOT make any assumptions about the level of notifications that it will receive.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R452</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5.7</ns1:Doc_Sect>
		<ns1:Description>[In Receiving Notification Details By Using the RopNotify ROP] [When the client subscribes to TableModified event notifications] the client MUST be able to handle any of the three response types specified in section 3.1.4.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R59</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Unless otherwise specified, any statement of optional behavior in this specification that is prescribed using the terms SHOULD or SHOULD NOT implies product behavior in accordance with the SHOULD or SHOULD NOT prescription.</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R60</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Unless otherwise specified, the term MAY implies that the product does not follow the prescription.</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R475</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Asynchronous calls are made on the server by using the MAPI extensions to HTTP. (Exchange 2013 SP1 follows this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R474:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R476</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the MAPI extensions to HTTP. (&lt;1&gt; Section 2.1: Exchange 2003 does not support the MAPI extensions to HTTP.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R474:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R477</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the MAPI extensions to HTTP. (&lt;1&gt; Section 2.1: Exchange 2007, Exchange 2010, the initial release of Exchange 2013 do not support the MAPI extensions to HTTP.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R474:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R478</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the MAPI extensions to HTTP. (&lt;1&gt; Section 2.1: Office Outlook 2003 does not support the MAPI extensions to HTTP.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R479</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the MAPI extensions to HTTP. (&lt;1&gt; Section 2.1: Office Outlook 2007, Outlook 2010, and the initial release of Outlook 2013 do not support the MAPI extensions to HTTP.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R480</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does support the MAPI extensions to HTTP. (&lt;1&gt; The MAPI extensions to HTTP were introduced in Microsoft Outlook 2013 Service Pack 1 (SP1)).</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R482</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation uses NotificationWait request type to notify the client of pending notifications. (Exchange 2013 SP1 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R481:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R483</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the NotificationWait request type. (&lt;2&gt; Section 2.2.1: Exchange 2003 does not support the NotificationWait request type.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R481:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R484</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the NotificationWait request type. (&lt;2&gt; Section 2.2.1: Exchange 2007, Exchange 2010, the initial release of Exchange 2013 do not support the NotificationWait request type.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R481:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R485</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the NotificationWait request type. (&lt;2&gt; Section 2.2.1: Office Outlook 2003 does not support the NotificationWait request type.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R486</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the NotificationWait request type. (&lt;2&gt; Section 2.2.1: Office Outlook 2007, Outlook 2010, and the initial release of Outlook 2013 do not support the NotificationWait request type.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R487</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does support the NotificationWait request type. (&lt;2&gt; Section 2.2.1: The NotificationWait request type was introduced in Outlook 2013 SP1.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R61</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the EcDoAsyncConnectEx method (&lt;4&gt; Section 2.2.1.3.1:  Exchange 2003 and Office Outlook 2003 do not support the EcDoAsyncConnectEx method, as specified in [MS-OXCRPC] section 3.1.4.4).</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R58:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R62</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] The EcDoAsyncConnectEx RPC method, as specified in [MS-OXCRPC] section 3.1.4.4, is used to acquire an asynchronous context handle on the implementation to use in subsequent EcDoAsyncWaitEx method calls, as specified in [MS-OXCRPC] section 3.3.4.1.  (Exchange 2007 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R58:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R67</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the EcDoAsyncWaitEx method. (&lt;5&gt; Section 2.2.1.3.2: Exchange 2003 and Office Outlook 2003 do not support the EcDoAsyncWaitEx method, as specified in [MS-OXCRPC] section 3.3.4.1.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R66:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R68</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] The EcDoAsyncWaitEx asynchronous RPC method, as specified in [MS-OXCRPC] section 3.3.4.1, is used to inform a client about pending notifications on the implementation. ( Exchange 2007 and above follow this behavior)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R66:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R73</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] The EcRRegisterPushNotification RPC method, as specified in [MS-OXCRPC] section 3.1.4.5, is used to register a callback address of a client on the implementation. (Exchange 2007 follows this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R72:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R460</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] The EcRRegisterPushNotification RPC method, as specified in [MS-OXCRPC] section 3.1.4.5, is used to register a callback address of a client on the implementation. (Exchange 2003 follows this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R72:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R461</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] &lt;6&gt; Section 2.2.1.3.3: Exchange 2003, Exchange 2007, Office Outlook 2003, Office Outlook 2007, and Outlook 2010 support the EcRRegisterPushNotification method, as specified in [MS-OXCRPC] section 3.1.4.5. </ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R74</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implemetation does not support the EcRRegisterPushNotification method. (&lt;6&gt; Section 2.2.1.3.3: The initial release version of Exchange 2010, and Microsoft Exchange Server 2010 Service Pack 1 (SP1), do not support the EcRRegisterPushNotification method, and the returned value is always ecNotSupported (0x80040102). )</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R72:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R75</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implemetation does support the EcRRegisterPushNotification method. (&lt;6&gt; Section 2.2.1.3.3: Microsoft Exchange Server 2010 Service Pack 2 (SP2) does support the EcRRegisterPushNotification method if a registry key is created to support push notifications, as described in [MSFT-ConfigStaticUDPPort].)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R72:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R467</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implemetation does support the EcRRegisterPushNotification method. (&lt;6&gt; Section 2.2.1.3.3: Exchange 2010 SP3 does support the EcRRegisterPushNotification method if a registry key is created to support push notifications, as described in [MSFT-ConfigStaticUDPPort].)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R72:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R76</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] &lt;6&gt; Section 2.2.1.3.3: Outlook 2013, Outlook 2016 andOutlook 2019 do not send the EcRRegisterPushNotification RPC method call. </ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R77</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the EcRRegisterPushNotification method. (&lt;6&gt; Section 2.2.1.3.3: Exchange 2013, Exchange 2016 and Exchange 2019 do not support the EcRRegisterPushNotification method, and the returned value is always ecNotSupported (0x80040102).)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R72:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R8201004</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the Execute request type. &lt;7&gt; Section 2.2.1.3.4:  Exchange 2003, Exchange 2007, Exchange 2010, the initial release of Exchange 2013 do not support the Execute request type.</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R8201:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R8201003</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the Execute request type.&lt;7&gt; Section 2.2.1.3.4:  Office Outlook 2003, Office Outlook 2007, Outlook 2010, and the initial release of Outlook 2013 do not support the Execute request type.</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R8201002</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] This ROP RopPending does appear only in response buffers of the Execute request type. &lt;7&gt; Section 2.2.1.3.4: The Execute request type was introduced in Outlook 2013 SP1.</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R8201001</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] This ROP RopPending does appear in response buffers of the Execute request type.&lt;7&gt; Section 2.2.1.3.4: The Execute request type was introduced in Exchange 2013 SP1. (Exchange 2013SP1 and above follow this behavior).</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R8201:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R498</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] This ROP [RopNotify] MUST appear in the Execute request type success response body. (Exchange 2013 SP1 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R496:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R499</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the Execute response type. (&lt;8&gt; Section 2.2.1.4.1: Exchange 2003 does not support the Execute response type.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R496:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R500</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the Execute response type. (&lt;8&gt; Section 2.2.1.4.1: Exchange 2007, Exchange 2010, the initial release of Exchange 2013 do not support the Execute response type.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R496:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R501</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the Execute response type. (&lt;8&gt; Section 2.2.1.4.1: Office Outlook 2003 does not support the Execute response type.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R502</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the Execute response type. (&lt;8&gt; Section 2.2.1.4.1: Office Outlook 2007, Outlook 2010, and the initial release of Outlook 2013 do not support the Execute response type.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R510</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does support the Execute request type. (&lt;8&gt; Section 2.2.1.4.1.1:  The Execute request type was introduced in Exchange 2013 SP1.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R503</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does support the Execute response type. (&lt;8&gt; Section 2.2.1.4.1: The Execute response type was introduced in Outlook 2013 SP1.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R198</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] [If the value of the NotificationType field in the NotificationFlags field is 0x0010] Implementation does not set the value of the TagCount field to 0x0000. (&lt;9&gt; Section 2.2.1.4.1.2:  Exchange 2007, and Exchange 2010 do not set the value of the TagCount field to 0x0000; they set the value of the field to the number of property tags in the Tags field.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R197:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R462</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] [If the value of the NotificationType field in the NotificationFlags field is 0x0010] Implementation does not set the value of the TagCount field to 0x0000. (&lt;9&gt; Section 2.2.1.4.1.2:  Exchange 2003 does not set the value of the TagCount field to 0x0000; it set the value of the field to the number of property tags in the Tags field.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R197:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R199</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] [If the value of the NotificationType field in the NotificationFlags field is 0x0010] Implementation will set the value of this field [TagCount] to 0x0000. (Exchange 2013 and above follow this behavior)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R197:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R538</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does allow for a 60-second interval between UDP datagrams until the client has retrieved all event information for the session, if push notifications are supported by the implementation. (Exchange 2007 follows this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R233:i,MS-OXCNOTIF_R59:i,MS-OXCNOTIF_R313:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R214001</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] MessageFlags does specify the message flags of new mail that has been received.(Exchange 2007, Exchange 2010, Exchange 2016 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R214:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R214002</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does return zero for MessageFlags. &lt;10&gt; Section 2.2.1.4.1.2:  In Exchange 2013 the value of MessageFlags is zero. (Exchange 2013 follows this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R214:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R512</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the session context cookie. (&lt;11&gt; Section 3.1.1:  Exchange 2003 does not support the session context cookie.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R513</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the session context cookie. (&lt;11&gt; Section 3.1.1:  Exchange 2007, Exchange 2010, the initial release of Exchange 2013 do not support the session context cookie.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R514</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the session context cookie. (&lt;11&gt; Section 3.1.1:  Office Outlook 2003 does not support the session context cookie.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R515</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the session context cookie. (&lt;11&gt; Section 3.1.1:  Office Outlook 2007, Outlook 2010, and the initial release of Outlook 2013 do not support the session context cookie.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R516</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does support the session context cookie. (&lt;11&gt; Section 3.1.1:  The session context cookie was introduced in Outlook 2013 SP1.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R517</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does support the session context cookie. (&lt;11&gt; Section 3.1.1:  The session context cookie was introduced in Exchange 2013 SP1.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R244</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] [If the client has subscribed to TableModified event notifications, by using the RopRegisterNotification ROP] Implementation does not require that a table view is created in order to send tale notifications. (&lt;12&gt; Section 3.1.4.3: Exchange 2007 does not require that a table view is created in order to send table notifications.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R243:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R463</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] [If the client has subscribed to TableModified event notifications, by using the RopRegisterNotification ROP] Implementation does not require that a table view is created in order to send tale notifications. (&lt;12&gt; Section 3.1.4.3: Exchange 2003 does not require that a table view is created in order to send table notifications.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R243:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R245</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] If the client has subscribed to TableModified event notifications, by using the RopRegisterNotification ROP (section 2.2.1.2.1), the implementation does require that a table view is created in order to send the TableModified event notifications, as specified in section 2.2.1.1.1. (Exchange 2010 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R243:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R257</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] The implementation does then create a subscription to TableModified event notifications automatically for every table created on the server. (Exchange 2007 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R256:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R269</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] However, the implementation does generate informative notifications whenever possible. (Exchange 2007 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R268:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R271</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does only generate a basic notification when it is not feasible to generate an informative notification. (Exchange 2007 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R270:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R294</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not stop sending notification if the RopResetTable ROP is received. (&lt;13&gt; Section 3.1.4.3: Exchange 2007 does not stop sending notifications if the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15) is received.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R274:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R464</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not stop sending notification if the RopResetTable ROP is received. (&lt;13&gt; Section 3.1.4.3: Exchange 2003 does not stop sending notifications if the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15) is received.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R274:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R275</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does stop sending notifications if the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15) is received, until a new table view is created using one of the following ROPs: RopFindRow. (Exchange 2010 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R274:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R277</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does stop sending notifications if the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15) is received, until a new table view is created using one of the following ROPs: RopQueryColumnsAll. (Exchange 2010 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R276:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R279</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does stop sending notifications if the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15) is received, until a new table view is created using one of the following ROPs: RopQueryPosition. (Exchange 2010 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R278:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R281</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] The implementation does stop sending notifications if the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15) is received, until a new table view is created using one of the following ROPs: RopQueryRows. (Exchange 2010 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R280:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R283</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] The implementation does stop sending notifications if the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15) is received, until a new table view is created using one of the following ROPs: RopSeekRow. (Exchange 2010 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R282:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R286</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] The Implementation does stop sending notifications if the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15) is received, until a new table view is created using one of the following ROPs: RopSeekRowBookmark. (Exchange 2010 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R285:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R288</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] When a RopRegisterNotification ROP (section 2.2.1.2.1) message is received by the server, the implementation does create a new Notification Subscription object and associate it with the session context. (Exchange 2007 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R287:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R290</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] [When a RopRegisterNotification ROP message is received by the server.] The implementation does save the information provided in the RopRegisterNotification ROP request fields for future use. (Exchange 2007 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R289:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R292</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] The implementation does allow multiple Notification Subscription objects to be created and associated with the same session context. (Exchange 2007 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R291:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R296</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the EcDoAsyncConnectEx method call or asynchronous RPC notifications. (&lt;14&gt; Section 3.1.5.2: Exchange 2003 does not support the EcDoAsyncConnectEx method call or asynchronous RPC notifications.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R295:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R297</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does support the EcDoAsyncConnectEx method call, as specified in [MS-OXCRPC] section 3.1.4.4. ( Exchange 2007 and above follow this behavior).</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R295:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R301</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the EcDoAsyncWaitEx method call. (&lt;15&gt; Section 3.1.5.3: Exchange 2003 does not support the EcDoAsyncWaitEx method call or asynchronous RPC notifications.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R300:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R302</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does support the EcDoAsyncWaitEx method call, as specified in [MS-OXCRPC] section 3.3.4.1. (Exchange 2007 and above follow this behavior).</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R300:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R305</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not complete the call [EcDoAsyncWaitEx Method Call] until there is a notification for the client session. (Exchange 2007 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R304:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R307</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not complete the call [EcDoAsyncWaitEx Method Call] until the call has been outstanding on the server 5 minutes. (Exchange 2007 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R306:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R313</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does support the EcRRegisterPushNotification method call. (Section 3.1.5.4: Exchange 2007 supports push notifications and the EcRRegisterPushNotification method, as specified in [MS-OXCRPC] section 3.1.4.5.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R312:i,MS-OXCNOTIF_R60:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R465</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does support the EcRRegisterPushNotification method call. (&lt;16&gt; Section 3.1.5.4: Exchange 2003 supports push notifications and the EcRRegisterPushNotification method, as specified in [MS-OXCRPC] section 3.1.4.5.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R312:i,MS-OXCNOTIF_R60:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R314</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the EcRRegisterPushNotification method call. (The initial release version of Exchange 2010, and Exchange 2010 SP1 do not support push notifications or the EcRRegisterPushNotification method.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R312:i,MS-OXCNOTIF_R60:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R315</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does support the EcRRegisterPushNotification method call. (Exchange 2010 SP2 does support push notifications and the EcRRegisterPushNotification method if a registry key is created, as described in [MSFT-ConfigStaticUDPPort].)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R312:i,MS-OXCNOTIF_R60:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R468</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the EcRRegisterPushNotification method call. (Microsoft Exchange Server 2010 Service Pack 3 (SP3) does not support push notifications and the EcRRegisterPushNotification method if a registry key is created, as described in [MSFT-ConfigStaticUDPPort].)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R312:i,MS-OXCNOTIF_R60:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R316</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the EcRRegisterPushNotification method call. (Exchange 2013 does not support push notifications of the EcRRegisterPushNotification method.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R312:i,MS-OXCNOTIF_R60:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R321</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does support at a minimum the AF_INET address type for IP support. (Exchange 2007 follows this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R320:i,MS-OXCNOTIF_R59:i,MS-OXCNOTIF_R313:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R323</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does support at a minimum the AF_INET6 address type for IPv6 support. (Exchange 2007 follows this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R322:i,MS-OXCNOTIF_R59:i,MS-OXCNOTIF_R313:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R326</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] After the callback address has been successfully registered with the implementation, the implementation does  send a UDP datagram containing the client's opaque data, from the rgbContext field, when a notification becomes available for the client. (Exchange 2007 follows this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R325:i,MS-OXCNOTIF_R59:i,MS-OXCNOTIF_R313:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R539</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does continue sending a UDP datagram to the callback address at 60-second intervals if event details are still queued for the client.(Exchange 2007 follows this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R327:i,MS-OXCNOTIF_R313:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R331</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does stop sending UDP datagrams when all of the notifications have been retrieved from the implementation through EcDoRpcExt2 method calls, as specified in [MS-OXCRPC] section 3.1.4.2. (Exchange 2007 follows this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R328:i,MS-OXCNOTIF_R59:i,MS-OXCNOTIF_R313:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R335</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] If all the RopNotify ROP responses do not fit in the response buffer, the implementation does include as many RopNotify ROP responses as will fit in the response, and then include a RopPending ROP response ([MS-OXCROPS] section 2.2.14.3) to indicate that additional notifications are available on the implementation. (Exchange 2007 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R334:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R346</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does send a RopNotify ROP response (section 2.2.1.4.1) to the client for each pending notification on the session context that is associated with the client. (Exchange 2007 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R345:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R348</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does send as many RopNotify ROP responses as the response buffer allows. (Exchange 2007 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCNOTIF_R347:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R371</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not require that the client send any ROPs to the server in order to receive TableModified event notifications. (&lt;16&gt; Section 3.2.4.2: Exchange 2007 does not require that the client send any ROPs to the server in order to receive TableModified event notifications, as specified in section 2.2.1.1.1.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCNOTIF_R244.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R469</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not require that the client send any ROPs to the server in order to receive TableModified event notifications. (&lt;16&gt; Section 3.2.4.2: Exchange 2003 does not require that the client send any ROPs to the server in order to receive TableModified event notifications, as specified in section 2.2.1.1.1.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R372</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does created the subscription automatically, when the client creates a Table object on the implementation. (In Exchange 2007, the subscription is created automatically when the client creates a Table object on the server.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R470</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does created the subscription automatically, when the client creates a Table object on the implementation. (In Exchange 2003, the subscription is created automatically when the client creates a Table object on the server.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R453</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does continue to send table notifications, even if the RopResetTable ROP is sent. (&lt;18&gt; Section 3.2.4.2: The client will continue to receive table notifications even if the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15) is sent, if the server is Exchange 2007.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCNOTIF_R294.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R471</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does continue to send table notifications, even if the RopResetTable ROP is sent. (&lt;18&gt; Section 3.2.4.2: The client will continue to receive table notifications even if the RopResetTable ROP ([MS-OXCROPS] section 2.2.5.15) is sent, if the server is Exchange 2003.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R454</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] &lt;19&gt; Section 3.2.4.3:  Office Outlook 2003 does not support the asynchronous RPC notification method. Office Outlook 2007, Outlook 2010, and Outlook 2013 and Outlook 2016 do support the asynchronous RPC notification method.</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R455</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] &lt;20&gt; Section 3.2.4.4:  Office Outlook 2003, Office Outlook 2007 and Outlook 2010 do support the push notification method. Outlook 2013 and Outlook 2016 does not support the push notification method.</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R456</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] &lt;22&gt; Section 3.2.5.4:  Outlook 2013 does not support the push notification method and does not send the EcRRegisterPushNotification RPC method call.</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R81001</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In EcDoRpcExt] [When the value of pcbOut is 0xC350, ]The RopPending ROP ([MS-OXCROPS] section 2.2.14.3) notifies the client that there are pending notifications on the server for the client. (Exchange 2007 follows this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCRPC_R663:i,MS-OXCRPC_R1924:i,MS-OXCNOTIF_R81:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R81002</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In EcDoRpcExt] [When the value of pcbOut is 0x190, ]The RopPending ROP ([MS-OXCROPS] section 2.2.14.3) notifies the client that there are pending notifications on the server for the client. (Exchange 2010 and above follow this behavior.)</ns1:Description>
		<ns1:Derived>MS-OXCRPC_R663:i,MS-OXCRPC_R1924:i,MS-OXCNOTIF_R81:i,MS-OXCNOTIF_R59:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R526</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the Execute request type. (&lt;23&gt; Section 3.2.5.5.3:  Exchange 2003 does not support the Execute request type.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R527</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the Execute request type. (&lt;23&gt; Section 3.2.5.5.3:  Exchange 2007, Exchange 2010, the initial release of Exchange 2013 do not support the Execute request type.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R528</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the Execute request type. (&lt;23&gt; Section 3.2.5.5.3:  Office Outlook 2003 does not support the Execute request type.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R529</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the Execute request type. (&lt;23&gt; Section 3.2.5.5.3:  Office Outlook 2007, Outlook 2010, and the initial release of Outlook 2013 do not support the Execute request type. )</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R530</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does support the Execute request type. (&lt;23&gt; Section 3.2.5.5.3:  The Execute request type was introduced in Outlook 2013 SP1.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R531</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does support the Execute request type. (&lt;23&gt; Section 3.2.5.5.3:  The Execute request type was introduced in Exchange 2013 SP1.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCNOTIF_R498.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R532</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the Execute request type. (&lt;24&gt; Section 3.2.5.7:  Exchange 2003 does not support the Execute request type.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R533</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the Execute request type. (&lt;24&gt; Section 3.2.5.7:  Exchange 2007, Exchange 2010, the initial release of Exchange 2013 do not support the Execute request type.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R534</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the Execute request type. (&lt;24&gt; Section 3.2.5.7:  Office Outlook 2003 does not support the Execute request type.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R535</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not support the Execute request type. (&lt;24&gt; Section 3.2.5.7:  Office Outlook 2007, Outlook 2010, and the initial release of Outlook 2013 do not support the Execute request type. )</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R536</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does support the Execute request type. (&lt;24&gt; Section 3.2.5.7:  The Execute request type was introduced in Outlook 2013 SP1.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R537</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does support the Execute request type. (&lt;24&gt; Section 3.2.5.7:  The Execute request type was introduced in Exchange 2013 SP1.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCNOTIF_R498.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCNOTIF_R1340</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does support this specification [MS-OXCMAPIHTTP]. (Exchange Server 2013 Service Pack 1 (SP1) follows this behavior.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCTABL_R802</ns1:REQ_ID>
		<ns1:Doc_Sect>6</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] If the client requests that the implementation perform a RopRestrict ([MS-OXCROPS] section 2.2.5.3) ROP request asynchronously, it does perform the operation synchronously and return "TBLSTAT_COMPLETE" in the TableStatus field of the ROP response buffer. ( &lt;20&gt; Section 3.2.5.1: Exchange 2010, Exchange 2013, and Exchange 2016 do not support asynchronous operations on tables and ignore the TABL_ASYNC flags, as described in section 2.2.2.1.4.)</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXCNOTIF_R13201.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCRPC_R663</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.12</ns1:Doc_Sect>
		<ns1:Description>[In EcDoRpcExt2 Method (opnum 11)] [pcbOut] If the value in the pcbOut parameter on input is less than 0x00000008, the server SHOULD&lt;21&gt; fail with error code ecRpcFailed (0x80040115).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirements: MS-OXCNOTIF_R81001, MS-OXCNOTIF_R81002.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCRPC_R1924</ns1:REQ_ID>
		<ns1:Doc_Sect>7</ns1:Doc_Sect>
		<ns1:Description>[In Appendix B: Product Behavior] Implementation does fail with ecRpcFormat (0x000004B6) if the output buffer is less than 0x00008007. (Microsoft Exchange Server 2007 follows this behavior).</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirements: MS-OXCNOTIF_R81001, MS-OXCNOTIF_R81002.</ns1:VerificationComment>
	</ns1:Requirement>
</ns1:ReqTable>